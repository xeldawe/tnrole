openapi: 3.0.1
info:
  title: Party Role Management
  description: >-
    **TMF API Reference : TMF669 - Party Role Management API**


    **Release : 23.0 - June 2023**


    This API can be seen as a generalization of TMF629 Customer Management API where Party Roles may
    be any – not only a Customer.

    It shares the same data structure as the TMF629 Customer Management API but its use is intended
    for more general cases, for instance within a partnership where the defined roles depend on the
    partnership kind (see TMF668 Partnership Type Management API).


    This API defines 2 resources:

    - PartyRole: it is the basis data for a partyRole (customer, partner...). It is the business
    incarnation of the Party. It assumes the use of the following API : TMF632 Party Management API
    for access to parties, TMF666 Account Management API for definition of accounts, TMF651
    Agreement Management API for agreement definition,

    - PartyRoleSpecification: this resource provides characteristics to describe a partyRole and the
    context where the partyRole is created. A partyRoleSpecification contains a reference to an
    array of permissionSpecificationSet (see TMF672 User Roles and Permissions API). They provide
    information on the permissions to build when creating a new PartyRole.


    This API plays an important role in the global party domain relating to TMF672 User Roles and
    Permissions API, TMF632 Party Management API, TMF669 Party Role Management API, TMF629 Customer
    Management API, TMF720 Digital Identity Management API, TMF691 Federated Identity API and TMF639
    Resource Management API. In summary, these TM Forum Open APIs are related to managing parties
    and their associated roles and digital identities within a network, as well as controlling
    access to information and resources through user roles and permissions. They provide a
    standardized way for organizations to manage these processes and enable integration with other
    systems.
  version: 5.0.0
servers:
  - url: 'https://serverRoot'
tags:
  - name: partyRole
    description: Operations for PartyRole Resource
  - name: partyRoleSpecification
    description: Operations for PartyRoleSpecification Resource
  - name: notification listener
    description: Notifications for Resource Lifecycle and event notifications
  - name: events subscription
    description: Endpoints to register and terminate an Event Listener
paths:
  /hub:
    post:
      operationId: createHub
      summary: Create a subscription (hub) to receive Events
      description: Sets the communication endpoint to receive Events.
      tags:
        - events subscription
      requestBody:
        $ref: '#/components/requestBodies/Hub_FVO'
      responses:
        '201':
          $ref: '#/components/responses/Hub'
        default:
          $ref: '#/components/responses/Error'
  '/hub/{id}':
    delete:
      operationId: hubDelete
      summary: Remove a subscription (hub) to receive Events
      description: ''
      tags:
        - events subscription
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '204':
          description: Deleted
        default:
          $ref: '#/components/responses/Error'
  /listener/partyRoleAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity PartyRoleAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        PartyRoleAttributeValueChangeEvent
      operationId: partyRoleAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/PartyRoleAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/partyRoleCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity PartyRoleCreateEvent
      description: Example of a client listener for receiving the notification PartyRoleCreateEvent
      operationId: partyRoleCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/PartyRoleCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/partyRoleDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity PartyRoleDeleteEvent
      description: Example of a client listener for receiving the notification PartyRoleDeleteEvent
      operationId: partyRoleDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/PartyRoleDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/partyRoleSpecificationAttributeValueChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity PartyRoleSpecificationAttributeValueChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        PartyRoleSpecificationAttributeValueChangeEvent
      operationId: partyRoleSpecificationAttributeValueChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/PartyRoleSpecificationAttributeValueChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/partyRoleSpecificationCreateEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity PartyRoleSpecificationCreateEvent
      description: >-
        Example of a client listener for receiving the notification
        PartyRoleSpecificationCreateEvent
      operationId: partyRoleSpecificationCreateEvent
      requestBody:
        $ref: '#/components/requestBodies/PartyRoleSpecificationCreateEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/partyRoleSpecificationDeleteEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity PartyRoleSpecificationDeleteEvent
      description: >-
        Example of a client listener for receiving the notification
        PartyRoleSpecificationDeleteEvent
      operationId: partyRoleSpecificationDeleteEvent
      requestBody:
        $ref: '#/components/requestBodies/PartyRoleSpecificationDeleteEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/partyRoleSpecificationStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity PartyRoleSpecificationStateChangeEvent
      description: >-
        Example of a client listener for receiving the notification
        PartyRoleSpecificationStateChangeEvent
      operationId: partyRoleSpecificationStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/PartyRoleSpecificationStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /listener/partyRoleStateChangeEvent:
    post:
      tags:
        - notification listener
      summary: Client listener for entity PartyRoleStateChangeEvent
      description: Example of a client listener for receiving the notification PartyRoleStateChangeEvent
      operationId: partyRoleStateChangeEvent
      requestBody:
        $ref: '#/components/requestBodies/PartyRoleStateChangeEvent'
      responses:
        '204':
          description: Notified
        default:
          $ref: '#/components/responses/Error'
  /partyRole:
    get:
      tags:
        - partyRole
      summary: List or find PartyRole objects
      description: List or find PartyRole objects
      operationId: listPartyRole
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200PartyRoleArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - partyRole
      summary: Creates a PartyRole
      description: This operation creates a PartyRole entity.
      operationId: createPartyRole
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/PartyRole_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201PartyRole'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/partyRole/{id}':
    get:
      tags:
        - partyRole
      summary: Retrieves a PartyRole by ID
      description: >-
        This operation retrieves a PartyRole entity. Attribute selection enabled for all first level
        attributes.
      operationId: retrievePartyRole
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200PartyRole_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - partyRole
      summary: Updates partially a PartyRole
      description: This operation updates partially a PartyRole entity.
      operationId: patchPartyRole
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/PartyRole_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200PartyRole_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - partyRole
      summary: Deletes a PartyRole
      description: This operation deletes a PartyRole entity.
      operationId: deletePartyRole
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  /partyRoleSpecification:
    get:
      tags:
        - partyRoleSpecification
      summary: List or find PartyRoleSpecification objects
      description: List or find PartyRoleSpecification objects
      operationId: listPartyRoleSpecification
      parameters:
        - $ref: '#/components/parameters/Fields'
        - $ref: '#/components/parameters/Offset'
        - $ref: '#/components/parameters/Limit'
      responses:
        '200':
          $ref: '#/components/responses/200PartyRoleSpecificationArray'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    post:
      tags:
        - partyRoleSpecification
      summary: Creates a PartyRoleSpecification
      description: This operation creates a PartyRoleSpecification entity.
      operationId: createPartyRoleSpecification
      parameters:
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/PartyRoleSpecification_FVO'
      responses:
        '201':
          $ref: '#/components/responses/201PartyRoleSpecification'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
  '/partyRoleSpecification/{id}':
    get:
      tags:
        - partyRoleSpecification
      summary: Retrieves a PartyRoleSpecification by ID
      description: >-
        This operation retrieves a PartyRoleSpecification entity. Attribute selection enabled for
        all first level attributes.
      operationId: retrievePartyRoleSpecification
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      responses:
        '200':
          $ref: '#/components/responses/200PartyRoleSpecification_Get'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    patch:
      tags:
        - partyRoleSpecification
      summary: Updates partially a PartyRoleSpecification
      description: This operation updates partially a PartyRoleSpecification entity.
      operationId: patchPartyRoleSpecification
      parameters:
        - $ref: '#/components/parameters/Id'
        - $ref: '#/components/parameters/Fields'
      requestBody:
        $ref: '#/components/requestBodies/PartyRoleSpecification_MVO'
      responses:
        '200':
          $ref: '#/components/responses/200PartyRoleSpecification_Patch'
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
    delete:
      tags:
        - partyRoleSpecification
      summary: Deletes a PartyRoleSpecification
      description: This operation deletes a PartyRoleSpecification entity.
      operationId: deletePartyRoleSpecification
      parameters:
        - $ref: '#/components/parameters/Id'
      responses:
        '202':
          $ref: '#/components/responses/202'
        '204':
          $ref: '#/components/responses/204'
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '403':
          $ref: '#/components/responses/403'
        '404':
          $ref: '#/components/responses/404'
        '405':
          $ref: '#/components/responses/405'
        '409':
          $ref: '#/components/responses/409'
        '500':
          $ref: '#/components/responses/500'
        '501':
          $ref: '#/components/responses/501'
        '503':
          $ref: '#/components/responses/503'
components:
  schemas:
    AccountRef:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef'
    AccountRef_FVO:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef_FVO'
    AccountRef_MVO:
      type: object
      description: Account reference. A account may be a party account or a financial account.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AccountRef: '#/components/schemas/AccountRef_MVO'
    Addressable:
      type: object
      description: Base schema for adressable entities
      properties:
        href:
          type: string
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
    Addressable_FVO:
      type: object
      description: Base schema for adressable entities
      properties:
        id:
          type: string
          description: unique identifier
    AgreementRef:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef'
    AgreementRef_FVO:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef_FVO'
    AgreementRef_MVO:
      type: object
      description: >-
        Agreement reference. An agreement represents a contract or arrangement, either written or
        verbal and sometimes enforceable by law, such as a service level agreement or a customer
        price agreement. An agreement involves a number of other business entities, such as
        products, services, and resources and/or their specifications.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementRef: '#/components/schemas/AgreementRef_MVO'
    AgreementSpecificationRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Agreement specification reference. An AgreementSpecification represents a template of an
            agreement that can be used when establishing partnerships.
          properties:
            description:
              type: string
              description: A narrative that explains in detail what the agreement specification is about.
            name:
              type: string
              description: Name of the agreement specification
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementSpecificationRef: '#/components/schemas/AgreementSpecificationRef'
    AgreementSpecificationRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Agreement specification reference. An AgreementSpecification represents a template of an
            agreement that can be used when establishing partnerships.
          properties:
            description:
              type: string
              description: A narrative that explains in detail what the agreement specification is about.
            name:
              type: string
              description: Name of the agreement specification
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementSpecificationRef: '#/components/schemas/AgreementSpecificationRef_FVO'
    AgreementSpecificationRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Agreement specification reference. An AgreementSpecification represents a template of an
            agreement that can be used when establishing partnerships.
          properties:
            description:
              type: string
              description: A narrative that explains in detail what the agreement specification is about.
            name:
              type: string
              description: Name of the agreement specification
      discriminator:
        propertyName: '@type'
        mapping:
          AgreementSpecificationRef: '#/components/schemas/AgreementSpecificationRef_MVO'
    AssociationSpecificationRef:
      type: object
      description: reference to an AssociationSpecification object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AssociationSpecificationRef: '#/components/schemas/AssociationSpecificationRef'
    AssociationSpecificationRef_FVO:
      type: object
      description: reference to an AssociationSpecification object
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          AssociationSpecificationRef: '#/components/schemas/AssociationSpecificationRef_FVO'
    AssociationSpecificationRef_MVO:
      type: object
      description: reference to an AssociationSpecification object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          AssociationSpecificationRef: '#/components/schemas/AssociationSpecificationRef_MVO'
    Attachment:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
    AttachmentRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment'
        - $ref: '#/components/schemas/AttachmentRef'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment'
          AttachmentRef: '#/components/schemas/AttachmentRef'
    AttachmentRefOrValue_FVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_FVO'
        - $ref: '#/components/schemas/AttachmentRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRefOrValue_MVO:
      type: object
      description: >-
        The polymorphic attributes @type, @schemaLocation & @referredType are related to the
        Attachment entity and not the AttachmentRefOrValue class itself
      oneOf:
        - $ref: '#/components/schemas/Attachment_MVO'
        - $ref: '#/components/schemas/AttachmentRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    AttachmentRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_FVO'
    AttachmentRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Attachment reference. An attachment complements the description of an element (for
            instance a product) through video, pictures
          properties:
            description:
              type: string
              description: A narrative text describing the content of the attachment
            url:
              description: Link to the attachment media/content
              type: string
      discriminator:
        propertyName: '@type'
        mapping:
          AttachmentRef: '#/components/schemas/AttachmentRef_MVO'
    Attachment_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
          required:
            - attachmentType
            - mimeType
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_FVO'
    Attachment_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Complements the description of an element (for instance a product) through video,
            pictures...
          properties:
            name:
              type: string
              description: The name of the attachment
            description:
              type: string
              description: A narrative text describing the content of the attachment
              example: Photograph of the Product
            url:
              type: string
              description: 'Uniform Resource Locator, is a web page address (a subset of URI)'
              example: 'http://host/Content/4aafacbd-11ff-4dc8-b445-305f2215715f'
            content:
              type: string
              format: base64
              description: 'The actual contents of the attachment object, if embedded, encoded as base64'
            size:
              $ref: '#/components/schemas/Quantity'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachmentType:
              type: string
              description: >-
                a business characterization of the purpose of the attachment, for example logo,
                instructionManual, contractCopy
            mimeType:
              type: string
              description: a technical characterization of the attachment content format using IETF Mime Types
      discriminator:
        propertyName: '@type'
        mapping:
          Attachment: '#/components/schemas/Attachment_MVO'
    BaseEvent:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent'
    BaseEvent_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent_FVO'
    BaseEvent_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: Base event with common attributes.
          properties:
            event:
              type: object
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explanatory of the event.
            priority:
              type: string
              description: A priority.
            timeOcurred:
              type: string
              format: date-time
              description: The time the event occured.
      discriminator:
        propertyName: '@type'
        mapping:
          BaseEvent: '#/components/schemas/BaseEvent_MVO'
    BooleanArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              items:
                type: boolean
    BooleanArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is an array booleans
          properties:
            value:
              type: array
              items:
                type: boolean
    BooleanArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is an array booleans
          properties:
            value:
              type: array
              items:
                type: boolean
    BooleanArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is an array booleans
          properties:
            value:
              type: array
              items:
                type: boolean
    BooleanArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              items:
                type: boolean
          required:
            - value
    BooleanArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Boolean(s).
          properties:
            value:
              type: array
              items:
                type: boolean
          required:
            - value
    BooleanCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BooleanCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is a boolean
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BooleanCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is a boolean
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BooleanCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is a boolean
          properties:
            value:
              type: boolean
              description: Value of the characteristic
    BooleanCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
          required:
            - value
    BooleanCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Boolean.
          properties:
            value:
              type: boolean
              description: Value of the characteristic
          required:
            - value
    BusinessPartner:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    BusinessPartner_FVO:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    BusinessPartner_MVO:
      type: object
      description: 'When business partner is the BusinessPartner '
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    Characteristic:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic'
          StringCharacteristic: '#/components/schemas/StringCharacteristic'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic'
          FloatCharacteristic: '#/components/schemas/FloatCharacteristic'
          FloatArrayCharacteristic: '#/components/schemas/FloatArrayCharacteristic'
    CharacteristicRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship'
    CharacteristicRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
          required:
            - id
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_FVO'
    CharacteristicRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Another Characteristic that is related to the current Characteristic;
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            relationshipType:
              type: string
              description: The type of relationship
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicRelationship: '#/components/schemas/CharacteristicRelationship_MVO'
    CharacteristicSpecification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: This class defines a characteristic specification.
          properties:
            id:
              type: string
              description: Unique ID for the characteristic
            name:
              type: string
              description: >-
                A word, term, or phrase by which this characteristic specification is known and
                distinguished from other characteristic specifications.
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic can take on, such as numeric, text and so
                forth
            description:
              type: string
              description: A narrative that explains the CharacteristicSpecification.
            configurable:
              type: boolean
              description: 'If true, the Boolean indicates that the target Characteristic is configurable'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            minCardinality:
              type: integer
              description: >-
                The minimum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where zero is the value for the
                minCardinality.
            maxCardinality:
              type: integer
              description: >-
                The maximum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where five is the value for the
                maxCardinality.
            isUnique:
              type: boolean
              description: >-
                Specifies if the value of this characteristic is unique across all entities
                instantiated from the specification that uses this characteristc. For example,
                consider a ProductSpecification for a set-top box, with a
                CharacteristicSpecification cardID. Each set-top box must have a different value for
                cardID, so this isUnique attribute would be set to true for the characteristic.
            regex:
              type: string
              description: >-
                A rule or principle represented in regular expression used to derive the value of a
                characteristic value.
            extensible:
              type: boolean
              description: >-
                An indicator that specifies that the values for the characteristic can be extended
                by adding new values when instantiating a characteristic for a resource.
            '@valueSchemaLocation':
              type: string
              description: This (optional) field provides a link to the schema describing the value type.
            charSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecificationRelationship'
              description: >-
                An aggregation, migration, substitution, dependency or exclusivity relationship
                between/among Specification Characteristics.
            characteristicValueSpecification:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicValueSpecification'
              description: >-
                A CharacteristicValueSpecification object is used to define a set of attributes,
                each of which can be assigned to a corresponding set of attributes in a
                CharacteristicSpecification object. The values of the attributes in the
                CharacteristicValueSpecification object describe the values of the attributes that a
                corresponding Characteristic object can take on.
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecification: '#/components/schemas/CharacteristicSpecification'
    CharacteristicSpecificationRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An aggregation, migration, substitution, dependency or exclusivity relationship
            between/among Characteristic specifications. The specification characteristic is
            embedded within the specification whose ID and href are in this entity, and identified
            by its ID.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of relationship such as aggregation, migration, substitution, dependency,
                exclusivity
            name:
              type: string
              description: Name of the target characteristic within the specification
            characteristicSpecificationId:
              type: string
              description: Unique identifier of the characteristic within the specification
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target characteristic
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target characteristic
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecificationRelationship: '#/components/schemas/CharacteristicSpecificationRelationship'
    CharacteristicSpecificationRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            An aggregation, migration, substitution, dependency or exclusivity relationship
            between/among Characteristic specifications. The specification characteristic is
            embedded within the specification whose ID and href are in this entity, and identified
            by its ID.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of relationship such as aggregation, migration, substitution, dependency,
                exclusivity
            name:
              type: string
              description: Name of the target characteristic within the specification
            characteristicSpecificationId:
              type: string
              description: Unique identifier of the characteristic within the specification
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target characteristic
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target characteristic
          required:
            - parentSpecificationId
            - name
            - relationshipType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecificationRelationship: '#/components/schemas/CharacteristicSpecificationRelationship_FVO'
    CharacteristicSpecificationRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An aggregation, migration, substitution, dependency or exclusivity relationship
            between/among Characteristic specifications. The specification characteristic is
            embedded within the specification whose ID and href are in this entity, and identified
            by its ID.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of relationship such as aggregation, migration, substitution, dependency,
                exclusivity
            name:
              type: string
              description: Name of the target characteristic within the specification
            characteristicSpecificationId:
              type: string
              description: Unique identifier of the characteristic within the specification
            parentSpecificationHref:
              type: string
              format: uri
              description: Hyperlink reference to the parent specification containing the target characteristic
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            parentSpecificationId:
              type: string
              description: Unique identifier of the parent specification containing the target characteristic
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecificationRelationship: '#/components/schemas/CharacteristicSpecificationRelationship_MVO'
    CharacteristicSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: This class defines a characteristic specification.
          properties:
            id:
              type: string
              description: Unique ID for the characteristic
            name:
              type: string
              description: >-
                A word, term, or phrase by which this characteristic specification is known and
                distinguished from other characteristic specifications.
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic can take on, such as numeric, text and so
                forth
            description:
              type: string
              description: A narrative that explains the CharacteristicSpecification.
            configurable:
              type: boolean
              description: 'If true, the Boolean indicates that the target Characteristic is configurable'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            minCardinality:
              type: integer
              description: >-
                The minimum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where zero is the value for the
                minCardinality.
            maxCardinality:
              type: integer
              description: >-
                The maximum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where five is the value for the
                maxCardinality.
            isUnique:
              type: boolean
              description: >-
                Specifies if the value of this characteristic is unique across all entities
                instantiated from the specification that uses this characteristc. For example,
                consider a ProductSpecification for a set-top box, with a
                CharacteristicSpecification cardID. Each set-top box must have a different value for
                cardID, so this isUnique attribute would be set to true for the characteristic.
            regex:
              type: string
              description: >-
                A rule or principle represented in regular expression used to derive the value of a
                characteristic value.
            extensible:
              type: boolean
              description: >-
                An indicator that specifies that the values for the characteristic can be extended
                by adding new values when instantiating a characteristic for a resource.
            '@valueSchemaLocation':
              type: string
              description: This (optional) field provides a link to the schema describing the value type.
            charSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecificationRelationship_FVO'
              description: >-
                An aggregation, migration, substitution, dependency or exclusivity relationship
                between/among Specification Characteristics.
            characteristicValueSpecification:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
              description: >-
                A CharacteristicValueSpecification object is used to define a set of attributes,
                each of which can be assigned to a corresponding set of attributes in a
                CharacteristicSpecification object. The values of the attributes in the
                CharacteristicValueSpecification object describe the values of the attributes that a
                corresponding Characteristic object can take on.
          required:
            - name
            - valueType
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecification: '#/components/schemas/CharacteristicSpecification_FVO'
    CharacteristicSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: This class defines a characteristic specification.
          properties:
            id:
              type: string
              description: Unique ID for the characteristic
            name:
              type: string
              description: >-
                A word, term, or phrase by which this characteristic specification is known and
                distinguished from other characteristic specifications.
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic can take on, such as numeric, text and so
                forth
            description:
              type: string
              description: A narrative that explains the CharacteristicSpecification.
            configurable:
              type: boolean
              description: 'If true, the Boolean indicates that the target Characteristic is configurable'
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            minCardinality:
              type: integer
              description: >-
                The minimum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where zero is the value for the
                minCardinality.
            maxCardinality:
              type: integer
              description: >-
                The maximum number of instances a CharacteristicValue can take on. For example, zero
                to five phone numbers in a group calling plan, where five is the value for the
                maxCardinality.
            isUnique:
              type: boolean
              description: >-
                Specifies if the value of this characteristic is unique across all entities
                instantiated from the specification that uses this characteristc. For example,
                consider a ProductSpecification for a set-top box, with a
                CharacteristicSpecification cardID. Each set-top box must have a different value for
                cardID, so this isUnique attribute would be set to true for the characteristic.
            regex:
              type: string
              description: >-
                A rule or principle represented in regular expression used to derive the value of a
                characteristic value.
            extensible:
              type: boolean
              description: >-
                An indicator that specifies that the values for the characteristic can be extended
                by adding new values when instantiating a characteristic for a resource.
            '@valueSchemaLocation':
              type: string
              description: This (optional) field provides a link to the schema describing the value type.
            charSpecRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicSpecificationRelationship_MVO'
              description: >-
                An aggregation, migration, substitution, dependency or exclusivity relationship
                between/among Specification Characteristics.
            characteristicValueSpecification:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
              description: >-
                A CharacteristicValueSpecification object is used to define a set of attributes,
                each of which can be assigned to a corresponding set of attributes in a
                CharacteristicSpecification object. The values of the attributes in the
                CharacteristicValueSpecification object describe the values of the attributes that a
                corresponding Characteristic object can take on.
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicSpecification: '#/components/schemas/CharacteristicSpecification_MVO'
    CharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            specification of a value (number or text or an object) that can be assigned to a
            Characteristic. This is an abstract base class, the actual value is in one of the
            strongly-typed subclasses
          properties:
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic value can take on, such as numeric, text and
                so forth
            isDefault:
              type: boolean
              description: >-
                If true, the Boolean Indicates if the value is the default value for a
                characteristic
            unitOfMeasure:
              type: string
              description: >-
                A length, surface, volume, dry measure, liquid measure, money, weight, time, and the
                like. In general, a determinate quantity or magnitude of the kind designated, taken
                as a standard of comparison for others of the same kind, in assigning to them
                numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            valueFrom:
              type: integer
              description: The low range value that a characteristic can take on
            valueTo:
              type: integer
              description: The upper range value that a characteristic can take on
            rangeInterval:
              type: string
              description: >-
                An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo
                attributes. If applicable, possible values are "open", "closed", "closedBottom" and
                "closedTop".
            regex:
              type: string
              description: A regular expression constraint for given value
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicValueSpecification: '#/components/schemas/CharacteristicValueSpecification'
          StringCharacteristicValueSpecification: '#/components/schemas/StringCharacteristicValueSpecification'
          StringArrayCharacteristicValueSpecification: '#/components/schemas/StringArrayCharacteristicValueSpecification'
          ObjectCharacteristicValueSpecification: '#/components/schemas/ObjectCharacteristicValueSpecification'
          ObjectArrayCharacteristicValueSpecification: '#/components/schemas/ObjectArrayCharacteristicValueSpecification'
          NumberCharacteristicValueSpecification: '#/components/schemas/NumberCharacteristicValueSpecification'
          NumberArrayCharacteristicValueSpecification: '#/components/schemas/NumberArrayCharacteristicValueSpecification'
          MapCharacteristicValueSpecification: '#/components/schemas/MapCharacteristicValueSpecification'
          MapArrayCharacteristicValueSpecification: '#/components/schemas/MapArrayCharacteristicValueSpecification'
          IntegerCharacteristicValueSpecification: '#/components/schemas/IntegerCharacteristicValueSpecification'
          IntegerArrayCharacteristicValueSpecification: '#/components/schemas/IntegerArrayCharacteristicValueSpecification'
    CharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            specification of a value (number or text or an object) that can be assigned to a
            Characteristic. This is an abstract base class, the actual value is in one of the
            strongly-typed subclasses
          properties:
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic value can take on, such as numeric, text and
                so forth
            isDefault:
              type: boolean
              description: >-
                If true, the Boolean Indicates if the value is the default value for a
                characteristic
            unitOfMeasure:
              type: string
              description: >-
                A length, surface, volume, dry measure, liquid measure, money, weight, time, and the
                like. In general, a determinate quantity or magnitude of the kind designated, taken
                as a standard of comparison for others of the same kind, in assigning to them
                numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            valueFrom:
              type: integer
              description: The low range value that a characteristic can take on
            valueTo:
              type: integer
              description: The upper range value that a characteristic can take on
            rangeInterval:
              type: string
              description: >-
                An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo
                attributes. If applicable, possible values are "open", "closed", "closedBottom" and
                "closedTop".
            regex:
              type: string
              description: A regular expression constraint for given value
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicValueSpecification: '#/components/schemas/CharacteristicValueSpecification_FVO'
          StringCharacteristicValueSpecification: '#/components/schemas/StringCharacteristicValueSpecification_FVO'
          StringArrayCharacteristicValueSpecification: '#/components/schemas/StringArrayCharacteristicValueSpecification_FVO'
          ObjectCharacteristicValueSpecification: '#/components/schemas/ObjectCharacteristicValueSpecification_FVO'
          ObjectArrayCharacteristicValueSpecification: '#/components/schemas/ObjectArrayCharacteristicValueSpecification_FVO'
          NumberCharacteristicValueSpecification: '#/components/schemas/NumberCharacteristicValueSpecification_FVO'
          NumberArrayCharacteristicValueSpecification: '#/components/schemas/NumberArrayCharacteristicValueSpecification_FVO'
          MapCharacteristicValueSpecification: '#/components/schemas/MapCharacteristicValueSpecification_FVO'
          MapArrayCharacteristicValueSpecification: '#/components/schemas/MapArrayCharacteristicValueSpecification_FVO'
          IntegerCharacteristicValueSpecification: '#/components/schemas/IntegerCharacteristicValueSpecification_FVO'
          IntegerArrayCharacteristicValueSpecification: '#/components/schemas/IntegerArrayCharacteristicValueSpecification_FVO'
    CharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            specification of a value (number or text or an object) that can be assigned to a
            Characteristic. This is an abstract base class, the actual value is in one of the
            strongly-typed subclasses
          properties:
            valueType:
              type: string
              description: >-
                A kind of value that the characteristic value can take on, such as numeric, text and
                so forth
            isDefault:
              type: boolean
              description: >-
                If true, the Boolean Indicates if the value is the default value for a
                characteristic
            unitOfMeasure:
              type: string
              description: >-
                A length, surface, volume, dry measure, liquid measure, money, weight, time, and the
                like. In general, a determinate quantity or magnitude of the kind designated, taken
                as a standard of comparison for others of the same kind, in assigning to them
                numerical values, as 1 foot, 1 yard, 1 mile, 1 square foot.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            valueFrom:
              type: integer
              description: The low range value that a characteristic can take on
            valueTo:
              type: integer
              description: The upper range value that a characteristic can take on
            rangeInterval:
              type: string
              description: >-
                An indicator that specifies the inclusion or exclusion of the valueFrom and valueTo
                attributes. If applicable, possible values are "open", "closed", "closedBottom" and
                "closedTop".
            regex:
              type: string
              description: A regular expression constraint for given value
      discriminator:
        propertyName: '@type'
        mapping:
          CharacteristicValueSpecification: '#/components/schemas/CharacteristicValueSpecification_MVO'
          StringCharacteristicValueSpecification: '#/components/schemas/StringCharacteristicValueSpecification_MVO'
          StringArrayCharacteristicValueSpecification: '#/components/schemas/StringArrayCharacteristicValueSpecification_MVO'
          ObjectCharacteristicValueSpecification: '#/components/schemas/ObjectCharacteristicValueSpecification_MVO'
          ObjectArrayCharacteristicValueSpecification: '#/components/schemas/ObjectArrayCharacteristicValueSpecification_MVO'
          NumberCharacteristicValueSpecification: '#/components/schemas/NumberCharacteristicValueSpecification_MVO'
          NumberArrayCharacteristicValueSpecification: '#/components/schemas/NumberArrayCharacteristicValueSpecification_MVO'
          MapCharacteristicValueSpecification: '#/components/schemas/MapCharacteristicValueSpecification_MVO'
          MapArrayCharacteristicValueSpecification: '#/components/schemas/MapArrayCharacteristicValueSpecification_MVO'
          IntegerCharacteristicValueSpecification: '#/components/schemas/IntegerCharacteristicValueSpecification_MVO'
          IntegerArrayCharacteristicValueSpecification: '#/components/schemas/IntegerArrayCharacteristicValueSpecification_MVO'
    Characteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_FVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_FVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_FVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_FVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_FVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_FVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_FVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_FVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_FVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_FVO'
          FloatCharacteristic: '#/components/schemas/FloatCharacteristic_FVO'
          FloatArrayCharacteristic: '#/components/schemas/FloatArrayCharacteristic_FVO'
    Characteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Describes a given characteristic of an object or entity through a name/value pair.
          properties:
            id:
              type: string
              description: Unique identifier of the characteristic
            name:
              type: string
              description: Name of the characteristic
            valueType:
              type: string
              description: Data type of the value of the characteristic
            characteristicRelationship:
              type: array
              items:
                $ref: '#/components/schemas/CharacteristicRelationship_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          Characteristic: '#/components/schemas/Characteristic_MVO'
          StringCharacteristic: '#/components/schemas/StringCharacteristic_MVO'
          StringArrayCharacteristic: '#/components/schemas/StringArrayCharacteristic_MVO'
          ObjectCharacteristic: '#/components/schemas/ObjectCharacteristic_MVO'
          ObjectArrayCharacteristic: '#/components/schemas/ObjectArrayCharacteristic_MVO'
          NumberCharacteristic: '#/components/schemas/NumberCharacteristic_MVO'
          NumberArrayCharacteristic: '#/components/schemas/NumberArrayCharacteristic_MVO'
          IntegerCharacteristic: '#/components/schemas/IntegerCharacteristic_MVO'
          IntegerArrayCharacteristic: '#/components/schemas/IntegerArrayCharacteristic_MVO'
          FloatCharacteristic: '#/components/schemas/FloatCharacteristic_MVO'
          FloatArrayCharacteristic: '#/components/schemas/FloatArrayCharacteristic_MVO'
    ConstraintRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Constraint reference. The Constraint resource represents a policy/rule applied to an
            entity or entity spec.
          properties:
            version:
              type: string
              description: constraint version
      discriminator:
        propertyName: '@type'
        mapping:
          ConstraintRef: '#/components/schemas/ConstraintRef'
    ConstraintRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Constraint reference. The Constraint resource represents a policy/rule applied to an
            entity or entity spec.
          properties:
            version:
              type: string
              description: constraint version
      discriminator:
        propertyName: '@type'
        mapping:
          ConstraintRef: '#/components/schemas/ConstraintRef_FVO'
    ConstraintRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Constraint reference. The Constraint resource represents a policy/rule applied to an
            entity or entity spec.
          properties:
            version:
              type: string
              description: constraint version
      discriminator:
        propertyName: '@type'
        mapping:
          ConstraintRef: '#/components/schemas/ConstraintRef_MVO'
    Consumer:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Consumer_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Consumer_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    ContactMedium:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Indicates the contact medium that could be used to contact the party.
          properties:
            id:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualifiy it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium'
          SocialContactMedium: '#/components/schemas/SocialContactMedium'
          PhoneContactMedium: '#/components/schemas/PhoneContactMedium'
          GeographicAddressContactMedium: '#/components/schemas/GeographicAddressContactMedium'
          FaxContactMedium: '#/components/schemas/FaxContactMedium'
          EmailContactMedium: '#/components/schemas/EmailContactMedium'
    ContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Indicates the contact medium that could be used to contact the party.
          properties:
            id:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualifiy it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium_FVO'
          SocialContactMedium: '#/components/schemas/SocialContactMedium_FVO'
          PhoneContactMedium: '#/components/schemas/PhoneContactMedium_FVO'
          GeographicAddressContactMedium: '#/components/schemas/GeographicAddressContactMedium_FVO'
          FaxContactMedium: '#/components/schemas/FaxContactMedium_FVO'
          EmailContactMedium: '#/components/schemas/EmailContactMedium_FVO'
    ContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Indicates the contact medium that could be used to contact the party.
          properties:
            id:
              type: string
              description: Identifier for this contact medium.
            preferred:
              type: boolean
              description: 'If true, indicates that is the preferred contact medium'
            contactType:
              type: string
              description: >-
                Type of the contact medium to qualifiy it like pro email / personal email. This is
                not used to define the contact medium used.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          ContactMedium: '#/components/schemas/ContactMedium_MVO'
          SocialContactMedium: '#/components/schemas/SocialContactMedium_MVO'
          PhoneContactMedium: '#/components/schemas/PhoneContactMedium_MVO'
          GeographicAddressContactMedium: '#/components/schemas/GeographicAddressContactMedium_MVO'
          FaxContactMedium: '#/components/schemas/FaxContactMedium_MVO'
          EmailContactMedium: '#/components/schemas/EmailContactMedium_MVO'
    CreditProfile:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Credit profile for the party (containing credit scoring, ...). By default only the
            current credit profile  is retrieved. It can be used as a list to give the party credit
            profiles history, the first one in the list will be the current one.
          properties:
            creditProfileDate:
              type: string
              format: date-time
              description: The date the profile was established
            creditRiskRating:
              type: integer
              description: This is an integer whose value is used to rate the risk
            creditScore:
              type: integer
              description: >-
                A measure of a person or organizations creditworthiness calculated on the basis of a
                combination of factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile'
    CreditProfile_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Credit profile for the party (containing credit scoring, ...). By default only the
            current credit profile  is retrieved. It can be used as a list to give the party credit
            profiles history, the first one in the list will be the current one.
          properties:
            creditProfileDate:
              type: string
              format: date-time
              description: The date the profile was established
            creditRiskRating:
              type: integer
              description: This is an integer whose value is used to rate the risk
            creditScore:
              type: integer
              description: >-
                A measure of a person or organizations creditworthiness calculated on the basis of a
                combination of factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile_FVO'
    CreditProfile_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Credit profile for the party (containing credit scoring, ...). By default only the
            current credit profile  is retrieved. It can be used as a list to give the party credit
            profiles history, the first one in the list will be the current one.
          properties:
            creditProfileDate:
              type: string
              format: date-time
              description: The date the profile was established
            creditRiskRating:
              type: integer
              description: This is an integer whose value is used to rate the risk
            creditScore:
              type: integer
              description: >-
                A measure of a person or organizations creditworthiness calculated on the basis of a
                combination of factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          CreditProfile: '#/components/schemas/CreditProfile_MVO'
    Disability:
      type: object
      description: Lack or inadequate strength or ability.
      properties:
        disabilityCode:
          type: string
          description: Code of the disability
        disabilityName:
          type: string
          description: Name of the disability
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    EmailContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: >-
            Describes an email that could be used to contact a party (an individual or an
            organization)
          properties:
            emailAddress:
              type: string
              description: Full email address in standard format
    EmailContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_FVO'
        - type: object
          description: >-
            Describes an email that could be used to contact a party (an individual or an
            organization)
          properties:
            emailAddress:
              type: string
              description: Full email address in standard format
    EmailContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: >-
            Describes an email that could be used to contact a party (an individual or an
            organization)
          properties:
            emailAddress:
              type: string
              description: Full email address in standard format
    Entity:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
    EntityRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - $ref: '#/components/schemas/Addressable'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    EntityRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/Addressable_FVO'
        - type: object
          description: Entity reference schema to be use for all entityRef class.
          properties:
            id:
              type: string
              description: The identifier of the referred entity.
            href:
              type: string
              description: The URI of the referred entity.
            name:
              type: string
              description: Name of the referred entity.
            '@referredType':
              type: string
              description: The actual type of the target instance when needed for disambiguation.
          required:
            - id
    EntitySpecification:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            EntitySpecification is a class that offers characteristics to describe a type of entity.
            Entities are generic constructs that may be used to describe bespoke business entities
            that are not effectively covered by the existing SID model.

            Functionally, the entity specification acts as a template by which entities may be
            instantiated and described. By sharing the same specification, these entities would
            therefore share the same set of characteristics.

            Note: The ‘configurable’ attribute on the specCharacteristics determines if an entity
            instantiated from the entity specification can override the value of the attribute. When
            set to false, the entity instance may not define a value that differs from the value in
            the specification.
          properties:
            name:
              type: string
              description: Name given to the specification
            description:
              type: string
              description: Description of the specification
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of the specification
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this catalog item
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether specification represents a single specification (false),
                or a bundle of specifications (true).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            version:
              type: string
              description: specification version
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this specification, such as picture,
                document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue'
            targetEntitySchema:
              $ref: '#/components/schemas/TargetEntitySchema'
            specCharacteristic:
              type: array
              description: List of characteristics that the entity can take
              items:
                $ref: '#/components/schemas/CharacteristicSpecification'
            relatedParty:
              type: array
              description: Parties who manage or otherwise have an interest in this specification
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            constraint:
              description: This is a list of constraint references applied to this specification
              type: array
              items:
                $ref: '#/components/schemas/ConstraintRef'
            entitySpecRelationship:
              type: array
              description: Relationship to another specification
              items:
                $ref: '#/components/schemas/EntitySpecificationRelationship'
      discriminator:
        propertyName: '@type'
        mapping:
          EntitySpecification: '#/components/schemas/EntitySpecification'
          PartyRoleSpecification: '#/components/schemas/PartyRoleSpecification'
    EntitySpecificationRelationship:
      type: object
      description: >-
        A migration, substitution, dependency or exclusivity relationship between/among entity
        specifications.
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity specification
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/AssociationSpecificationRef'
        '@baseType':
          type: string
        '@schemaLocation':
          type: string
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
    EntitySpecificationRelationship_FVO:
      type: object
      description: >-
        A migration, substitution, dependency or exclusivity relationship between/among entity
        specifications.
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity specification
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/AssociationSpecificationRef_FVO'
        '@baseType':
          type: string
        '@schemaLocation':
          type: string
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
      required:
        - role
        - relationshipType
        - validFor
        - associationSpec
    EntitySpecificationRelationship_MVO:
      type: object
      description: >-
        A migration, substitution, dependency or exclusivity relationship between/among entity
        specifications.
      properties:
        href:
          type: string
        name:
          type: string
        role:
          type: string
          description: The association role for this entity specification
        validFor:
          $ref: '#/components/schemas/TimePeriod'
        associationSpec:
          $ref: '#/components/schemas/AssociationSpecificationRef_MVO'
        '@baseType':
          type: string
        '@schemaLocation':
          type: string
        relationshipType:
          type: string
          description: 'Type of relationship such as migration, substitution, dependency, exclusivity'
    EntitySpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            EntitySpecification is a class that offers characteristics to describe a type of entity.
            Entities are generic constructs that may be used to describe bespoke business entities
            that are not effectively covered by the existing SID model.

            Functionally, the entity specification acts as a template by which entities may be
            instantiated and described. By sharing the same specification, these entities would
            therefore share the same set of characteristics.

            Note: The ‘configurable’ attribute on the specCharacteristics determines if an entity
            instantiated from the entity specification can override the value of the attribute. When
            set to false, the entity instance may not define a value that differs from the value in
            the specification.
          properties:
            name:
              type: string
              description: Name given to the specification
            description:
              type: string
              description: Description of the specification
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of the specification
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this catalog item
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether specification represents a single specification (false),
                or a bundle of specifications (true).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            version:
              type: string
              description: specification version
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this specification, such as picture,
                document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
            targetEntitySchema:
              $ref: '#/components/schemas/TargetEntitySchema_FVO'
            specCharacteristic:
              type: array
              description: List of characteristics that the entity can take
              items:
                $ref: '#/components/schemas/CharacteristicSpecification_FVO'
            relatedParty:
              type: array
              description: Parties who manage or otherwise have an interest in this specification
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            constraint:
              description: This is a list of constraint references applied to this specification
              type: array
              items:
                $ref: '#/components/schemas/ConstraintRef_FVO'
            entitySpecRelationship:
              type: array
              description: Relationship to another specification
              items:
                $ref: '#/components/schemas/EntitySpecificationRelationship_FVO'
          required:
            - name
      discriminator:
        propertyName: '@type'
        mapping:
          EntitySpecification: '#/components/schemas/EntitySpecification_FVO'
          PartyRoleSpecification: '#/components/schemas/PartyRoleSpecification_FVO'
    EntitySpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            EntitySpecification is a class that offers characteristics to describe a type of entity.
            Entities are generic constructs that may be used to describe bespoke business entities
            that are not effectively covered by the existing SID model.

            Functionally, the entity specification acts as a template by which entities may be
            instantiated and described. By sharing the same specification, these entities would
            therefore share the same set of characteristics.

            Note: The ‘configurable’ attribute on the specCharacteristics determines if an entity
            instantiated from the entity specification can override the value of the attribute. When
            set to false, the entity instance may not define a value that differs from the value in
            the specification.
          properties:
            name:
              type: string
              description: Name given to the specification
            description:
              type: string
              description: Description of the specification
            lastUpdate:
              type: string
              format: date-time
              description: Date and time of the last update of the specification
            lifecycleStatus:
              type: string
              description: Used to indicate the current lifecycle status of this catalog item
            isBundle:
              type: boolean
              description: >-
                isBundle determines whether specification represents a single specification (false),
                or a bundle of specifications (true).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            version:
              type: string
              description: specification version
            attachment:
              type: array
              description: >-
                Attachments that may be of relevance to this specification, such as picture,
                document, media
              items:
                $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
            targetEntitySchema:
              $ref: '#/components/schemas/TargetEntitySchema_MVO'
            specCharacteristic:
              type: array
              description: List of characteristics that the entity can take
              items:
                $ref: '#/components/schemas/CharacteristicSpecification_MVO'
            relatedParty:
              type: array
              description: Parties who manage or otherwise have an interest in this specification
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            constraint:
              description: This is a list of constraint references applied to this specification
              type: array
              items:
                $ref: '#/components/schemas/ConstraintRef_MVO'
            entitySpecRelationship:
              type: array
              description: Relationship to another specification
              items:
                $ref: '#/components/schemas/EntitySpecificationRelationship_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          EntitySpecification: '#/components/schemas/EntitySpecification_MVO'
          PartyRoleSpecification: '#/components/schemas/PartyRoleSpecification_MVO'
    Entity_FVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - $ref: '#/components/schemas/Addressable_FVO'
    Entity_MVO:
      type: object
      description: Base entity schema for use in TMForum Open-APIs. Property.
      allOf:
        - $ref: '#/components/schemas/Extensible'
    Event:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
    Event_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef_FVO'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef_FVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
          required:
            - eventId
            - eventTime
            - eventType
            - event
    Event_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: event with common attributes.
          properties:
            href:
              type: string
              description: Hyperlink reference
            id:
              type: string
              description: unique identifier
            correlationId:
              type: string
              description: The correlation id for this event.
            domain:
              type: string
              description: The domain of the event.
            title:
              type: string
              description: The title of the event.
            description:
              type: string
              description: An explnatory of the event.
            priority:
              type: string
              description: A priority.
            timeOccurred:
              type: string
              format: date-time
              description: The time the event occurred.
            source:
              $ref: '#/components/schemas/EntityRef'
            reportingSystem:
              $ref: '#/components/schemas/EntityRef'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
            analyticCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
            eventId:
              type: string
              description: The identifier of the notification.
            eventTime:
              type: string
              format: date-time
              description: Time of the event occurrence.
            eventType:
              type: string
              description: The type of the notification.
            event:
              description: The event linked to the involved resource object
              type: object
          required:
            - eventId
            - eventTime
            - eventType
            - event
    Extensible:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    Extensible_FVO:
      type: object
      description: >-
        Base Extensible schema for use in TMForum Open-APIs - When used for in a schema it means
        that the Entity described by the schema  MUST be extended with the @type
      properties:
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          description: A URI to a JSON-Schema file that defines additional attributes and relationships
      required:
        - '@type'
    ExternalIdentifier:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier'
    ExternalIdentifier_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
          required:
            - id
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_FVO'
    ExternalIdentifier_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            An identification of an entity that is owned by or originates in a software system
            different from the current system, for example a ProductOrder handed off from a commerce
            platform into an order handling system. The structure identifies the system itself, the
            nature of the entity within the system (e.g. class name) and the unique ID of the entity
            within the system. It is anticipated that multiple external IDs can be held for a single
            entity, e.g. if the entity passed through multiple systems on the way to the current
            system. In this case the consumer is expected to sequence the IDs in the array in
            reverse order of provenance, i.e. most recent system first in the list.
          properties:
            owner:
              type: string
              description: Name of the external system that owns the entity.
              example: MagentoCommerce
            externalIdentifierType:
              type: string
              description: >-
                Type of the identification, typically would be the type of the entity within the
                external system
              example: ProductOrder
            id:
              type: string
              description: identification of the entity within the external system.
      discriminator:
        propertyName: '@type'
        mapping:
          ExternalIdentifier: '#/components/schemas/ExternalIdentifier_MVO'
    FaxContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: Describes a fax that could be used to contact a party (an individual or an organization)
          properties:
            faxNumber:
              type: string
              description: The fax number of the contact
    FaxContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_FVO'
        - type: object
          description: Describes a fax that could be used to contact a party (an individual or an organization)
          properties:
            faxNumber:
              type: string
              description: The fax number of the contact
    FaxContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: Describes a fax that could be used to contact a party (an individual or an organization)
          properties:
            faxNumber:
              type: string
              description: The fax number of the contact
    FloatArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Float(s).
          properties:
            value:
              type: array
              items:
                type: number
                format: float
    FloatArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            floating point
          properties:
            value:
              type: array
              items:
                type: number
                format: float
    FloatArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            floating point
          properties:
            value:
              type: array
              items:
                type: number
                format: float
    FloatArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            floating point
          properties:
            value:
              type: array
              items:
                type: number
                format: float
    FloatArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Float(s).
          properties:
            value:
              type: array
              items:
                type: number
                format: float
          required:
            - value
    FloatArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Float(s).
          properties:
            value:
              type: array
              items:
                type: number
                format: float
          required:
            - value
    FloatCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Float.
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
    FloatCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is a floating point number
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
    FloatCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is a floating point number
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
    FloatCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is a floating point number
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
    FloatCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Float.
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
          required:
            - value
    FloatCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Float.
          properties:
            value:
              type: number
              format: float
              description: Value of the characteristic
          required:
            - value
    GeographicAddressContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: >-
            Describes a geographical address that could be used to contact a party (an individual or
            an organization)
          properties:
            city:
              type: string
              description: The city
            country:
              type: string
              description: The country
            postCode:
              type: string
              description: Postcode
            stateOrProvince:
              type: string
              description: State or province
            street1:
              type: string
              description: Describes the street
            street2:
              type: string
              description: Complementary street description
            geographicAddress:
              $ref: '#/components/schemas/GeographicAddressRef'
    GeographicAddressContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_FVO'
        - type: object
          description: >-
            Describes a geographical address that could be used to contact a party (an individual or
            an organization)
          properties:
            city:
              type: string
              description: The city
            country:
              type: string
              description: The country
            postCode:
              type: string
              description: Postcode
            stateOrProvince:
              type: string
              description: State or province
            street1:
              type: string
              description: Describes the street
            street2:
              type: string
              description: Complementary street description
            geographicAddress:
              $ref: '#/components/schemas/GeographicAddressRef_FVO'
    GeographicAddressContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: >-
            Describes a geographical address that could be used to contact a party (an individual or
            an organization)
          properties:
            city:
              type: string
              description: The city
            country:
              type: string
              description: The country
            postCode:
              type: string
              description: Postcode
            stateOrProvince:
              type: string
              description: State or province
            street1:
              type: string
              description: Describes the street
            street2:
              type: string
              description: Complementary street description
            geographicAddress:
              $ref: '#/components/schemas/GeographicAddressRef_MVO'
    GeographicAddressRef:
      type: object
      description: Reference to a Geographic Address.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRef: '#/components/schemas/GeographicAddressRef'
    GeographicAddressRef_FVO:
      type: object
      description: Reference to a Geographic Address.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRef: '#/components/schemas/GeographicAddressRef_FVO'
    GeographicAddressRef_MVO:
      type: object
      description: Reference to a Geographic Address.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          GeographicAddressRef: '#/components/schemas/GeographicAddressRef_MVO'
    Individual:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    IndividualIdentification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification'
    IndividualIdentification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification_FVO'
    IndividualIdentification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Represents our registration of information used as proof of identity by an individual
            (passport, national identity card, drivers license, social security number, birth
            certificate)
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: 'Authority which has issued the identifier, such as: social security, town hall'
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Identification type (passport, national identity card, drivers license, social
                security number, birth certificate)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          IndividualIdentification: '#/components/schemas/IndividualIdentification_MVO'
    IndividualStateType:
      enum:
        - initialized
        - validated
        - deceased
      type: string
      description: Valid values for the lifecycle state of the individual
    Individual_FVO:
      allOf:
        - $ref: '#/components/schemas/Party_FVO'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification_FVO'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    Individual_MVO:
      allOf:
        - $ref: '#/components/schemas/Party_MVO'
        - type: object
          description: >-
            Individual represents a single human being (a man, woman or child). The individual can
            be a customer, an employee or any other person that the organization needs to store
            information about.
          properties:
            gender:
              type: string
              description: Gender
            placeOfBirth:
              type: string
              description: Reference to the place where the individual was born
            countryOfBirth:
              type: string
              description: Country where the individual was born
            nationality:
              type: string
              description: Nationality
            maritalStatus:
              type: string
              description: 'Marital status (married, divorced, widow ...)'
            birthDate:
              type: string
              format: date-time
              description: Birth date
            deathDate:
              type: string
              format: date-time
              description: Date of death
            title:
              type: string
              description: 'Useful for titles (aristocratic, social,...) Pr, Dr, Sir, ...'
            aristocraticTitle:
              type: string
              description: 'e.g. Baron, Graf, Earl'
            generation:
              type: string
              description: 'e.g.. Sr, Jr, III (the third)'
            preferredGivenName:
              type: string
              description: >-
                Contains the chosen name by which the individual prefers to be addressed. Note: This
                name may be a name other than a given name, such as a nickname
            familyNamePrefix:
              type: string
              description: Family name prefix
            legalName:
              type: string
              description: Legal name or birth name (name one has for official purposes)
            middleName:
              type: string
              description: Middles name or initial
            name:
              type: string
              description: >-
                Full name flatten (first, middle, and last names) - this is the name that is
                expected to be presented in reference data types such as PartyRef, RelatedParty,
                etc. that refer to Individual
            formattedName:
              type: string
              description: >-
                A fully formatted name in one string with all of its pieces in their proper place
                and all of the necessary punctuation. Useful for specific contexts (Chinese,
                Japanese, Korean)
            location:
              type: string
              description: >-
                Temporary current location of the individual (may be used if the individual has
                approved its sharing)
            status:
              $ref: '#/components/schemas/IndividualStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameIndividual'
              description: List of other names by which this individual is known
            individualIdentification:
              type: array
              items:
                $ref: '#/components/schemas/IndividualIdentification_MVO'
              description: >-
                List of official identifications issued to the individual, such as passport, driving
                licence, social security number
            disability:
              type: array
              items:
                $ref: '#/components/schemas/Disability'
              description: List of disabilities suffered by the individual
            languageAbility:
              type: array
              items:
                $ref: '#/components/schemas/LanguageAbility'
              description: List of national languages known by the individual
            skill:
              type: array
              items:
                $ref: '#/components/schemas/Skill'
              description: List of skills exhibited by the individual
            familyName:
              type: string
              description: >-
                Contains the non-chosen or inherited name. Also known as last name in the Western
                context
            givenName:
              type: string
              description: First name of the individual
    IntegerArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              items:
                type: integer
    IntegerArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            integer
          properties:
            value:
              type: array
              items:
                type: integer
    IntegerArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            integer
          properties:
            value:
              type: array
              items:
                type: integer
    IntegerArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array of format
            integer
          properties:
            value:
              type: array
              items:
                type: integer
    IntegerArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              items:
                type: integer
          required:
            - value
    IntegerArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Integer(s).
          properties:
            value:
              type: array
              items:
                type: integer
          required:
            - value
    IntegerCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is an integer number
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is an integer number
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is an integer number
          properties:
            value:
              type: integer
              description: Value of the characteristic
    IntegerCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
          required:
            - value
    IntegerCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Integer.
          properties:
            value:
              type: integer
              description: Value of the characteristic
          required:
            - value
    LanguageAbility:
      type: object
      description: Ability of an individual to understand or converse in a language.
      properties:
        languageCode:
          type: string
          description: Language code (RFC 5646)
        languageName:
          type: string
          description: Language name
        isFavouriteLanguage:
          type: boolean
          description: >-
            A “true” value specifies whether the language is considered by the individual as his
            favourite one
        writingProficiency:
          type: string
          description: Writing proficiency evaluated for this language
        readingProficiency:
          type: string
          description: Reading proficiency evaluated for this language
        speakingProficiency:
          type: string
          description: Speaking proficiency evaluated for this language
        listeningProficiency:
          type: string
          description: Listening proficiency evaluated for this language
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    MapArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is an array of mapped objects
          properties:
            value:
              type: array
              items:
                type: object
                properties:
                  value:
                    type: object
                    additionalProperties:
                      type: object
    MapArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of mapped objects
          properties:
            value:
              type: array
              items:
                type: object
                properties:
                  value:
                    type: object
                    additionalProperties:
                      type: object
    MapArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of mapped objects
          properties:
            value:
              type: array
              items:
                type: object
                properties:
                  value:
                    type: object
                    additionalProperties:
                      type: object
    MapCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is a mapped object
          properties:
            value:
              type: object
              additionalProperties:
                type: object
              description: Value of the characteristic
    MapCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is a mapped object
          properties:
            value:
              type: object
              additionalProperties:
                type: object
              description: Value of the characteristic
    MapCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is a mapped object
          properties:
            value:
              type: object
              additionalProperties:
                type: object
              description: Value of the characteristic
    NumberArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              items:
                type: number
    NumberArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array with no
            specific format 
          properties:
            value:
              type: array
              items:
                type: number
    NumberArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array with no
            specific format 
          properties:
            value:
              type: array
              items:
                type: number
    NumberArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number array with no
            specific format 
          properties:
            value:
              type: array
              items:
                type: number
    NumberArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              items:
                type: number
          required:
            - value
    NumberArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Number(s).
          properties:
            value:
              type: array
              items:
                type: number
          required:
            - value
    NumberCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number of no specific
            format
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number of no specific
            format
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: >-
            A specification for a characteristic for which the value is a number of no specific
            format
          properties:
            value:
              type: number
              description: Value of the characteristic
    NumberCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
          required:
            - value
    NumberCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Number.
          properties:
            value:
              type: number
              description: Value of the characteristic
          required:
            - value
    ObjectArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              items:
                type: object
    ObjectArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is an array of objects
          properties:
            value:
              type: array
              items:
                type: object
    ObjectArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of objects
          properties:
            value:
              type: array
              items:
                type: object
    ObjectArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of objects
          properties:
            value:
              type: array
              items:
                type: object
    ObjectArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              items:
                type: object
          required:
            - value
    ObjectArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of Object(s).
          properties:
            value:
              type: array
              items:
                type: object
          required:
            - value
    ObjectCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is any object
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is any object
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is any object
          properties:
            value:
              type: object
              description: Value of the characteristic
    ObjectCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
          required:
            - value
    ObjectCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a Object.
          properties:
            value:
              type: object
              description: Value of the characteristic
          required:
            - value
    Organization:
      allOf:
        - $ref: '#/components/schemas/Party'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
    OrganizationChildRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Child references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship'
    OrganizationChildRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Child references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship_FVO'
    OrganizationChildRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Child references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationChildRelationship: '#/components/schemas/OrganizationChildRelationship_MVO'
    OrganizationIdentification:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification'
    OrganizationIdentification_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification_FVO'
    OrganizationIdentification_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Represents our registration of information used as proof of identity by an organization
          properties:
            identificationId:
              type: string
              description: Identifier
            issuingAuthority:
              type: string
              description: Authority which has issued the identifier (chamber of commerce...)
            issuingDate:
              type: string
              format: date-time
              description: Date at which the identifier was issued
            identificationType:
              type: string
              description: >-
                Type of identification information used to identify the company in a country or
                internationally
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationIdentification: '#/components/schemas/OrganizationIdentification_MVO'
    OrganizationParentRelationship:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Parent references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship'
    OrganizationParentRelationship_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: Parent references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship_FVO'
    OrganizationParentRelationship_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: Parent references of an organization in a structure of organizations.
          properties:
            relationshipType:
              type: string
              description: >-
                Type of the relationship. Could be juridical, hierarchical, geographical, functional
                for example.
            organization:
              $ref: '#/components/schemas/OrganizationRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationParentRelationship: '#/components/schemas/OrganizationParentRelationship_MVO'
    OrganizationRef:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef'
    OrganizationRef_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef_FVO'
    OrganizationRef_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          OrganizationRef: '#/components/schemas/OrganizationRef_MVO'
    OrganizationStateType:
      enum:
        - initialized
        - validated
        - closed
      type: string
      description: Valid values for the lifecycle state of the organization
    Organization_FVO:
      allOf:
        - $ref: '#/components/schemas/Party_FVO'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization_FVO'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification_FVO'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship_FVO'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship_FVO'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
    Organization_MVO:
      allOf:
        - $ref: '#/components/schemas/Party_MVO'
        - type: object
          description: >-
            Organization represents a group of people identified by shared interests or purpose.
            Examples include business, department and enterprise. Because of the complex nature of
            many businesses, both organizations and organization units are represented by the same
            data.
          properties:
            isLegalEntity:
              type: boolean
              description: >-
                If value is true, the organization is a legal entity known by a national
                referential.
            isHeadOffice:
              type: boolean
              description: 'If value is true, the organization is the head office'
            organizationType:
              type: string
              description: 'Type of Organization (company, department...)'
            existsDuring:
              $ref: '#/components/schemas/TimePeriod'
            name:
              type: string
              description: Organization name (department name for example)
            nameType:
              type: string
              description: 'Type of the name : Co, Inc, Ltd, etc.'
            status:
              $ref: '#/components/schemas/OrganizationStateType'
            otherName:
              type: array
              items:
                $ref: '#/components/schemas/OtherNameOrganization_MVO'
              description: List of additional names by which the organization is known
            organizationIdentification:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationIdentification_MVO'
              description: >-
                List of official identifiers given to the organization, for example company number
                in the registry of companies
            organizationChildRelationship:
              type: array
              items:
                $ref: '#/components/schemas/OrganizationChildRelationship_MVO'
              description: >-
                List of organizations that are contained within this organization. For example if
                this organization is the Legal Department, the child organizations might include
                Claims, Courts, Contracts
            organizationParentRelationship:
              $ref: '#/components/schemas/OrganizationParentRelationship_MVO'
            tradingName:
              type: string
              description: Name that the organization (unit) trades under
    OtherNameIndividual:
      type: object
      description: >-
        Keeps track of other names, for example the old name of a woman before marriage or an artist
        name.
      properties:
        title:
          type: string
          description: 'Use for titles (aristrocatic, social, ...): Pr, Dr, Sir,....'
        aristocraticTitle:
          type: string
          description: 'e.g. Baron, Graf, Earl, etc.'
        generation:
          type: string
          description: 'e.g. Sr, Jr, etc.'
        givenName:
          type: string
          description: First name
        preferredGivenName:
          type: string
          description: >-
            Contains the chosen name by which the person prefers to be addressed. Note: This name
            may be a name other than a given name, such as a nickname
        familyNamePrefix:
          type: string
          description: Family name prefix
        familyName:
          type: string
          description: >-
            Contains the non-chosen or inherited name. Also known as last name in the Western
            context
        legalName:
          type: string
          description: Legal name or birth name (name one has for official purposes)
        middleName:
          type: string
          description: Middle name or initial
        fullName:
          type: string
          description: 'Full name flatten (first, middle, and last names)'
        formattedName:
          type: string
          description: >-
            . A fully formatted name in one string with all of its pieces in their proper place and
            all of the necessary punctuation. Useful for specific contexts (Chinese, Japanese,
            Korean, etc.)
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    OtherNameOrganization:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Keeps track of other names, for example the old name of an organization.'
          properties:
            tradingName:
              type: string
              description: The name that the organization trades under
            nameType:
              type: string
              description: 'Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh'
            name:
              type: string
              description: Organization name (department name for example)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization'
    OtherNameOrganization_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: 'Keeps track of other names, for example the old name of an organization.'
          properties:
            tradingName:
              type: string
              description: The name that the organization trades under
            nameType:
              type: string
              description: 'Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh'
            name:
              type: string
              description: Organization name (department name for example)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization_FVO'
    OtherNameOrganization_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: 'Keeps track of other names, for example the old name of an organization.'
          properties:
            tradingName:
              type: string
              description: The name that the organization trades under
            nameType:
              type: string
              description: 'Co. , Inc. , Ltd. , Pty Ltd. , Plc; , Gmbh'
            name:
              type: string
              description: Organization name (department name for example)
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          OtherNameOrganization: '#/components/schemas/OtherNameOrganization_MVO'
    Party:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party'
          Organization: '#/components/schemas/Organization'
          Individual: '#/components/schemas/Individual'
    PartyCreditProfile:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: >-
            An individual might be evaluated for its worthiness and this evaluation might be based
            on a credit rating given by a credit agency.
          properties:
            creditAgencyName:
              type: string
              description: Name of the credit agency giving the score
            creditAgencyType:
              type: string
              description: Type of the credit agency giving the score
            ratingReference:
              type: string
              description: Reference corresponding to the credit rating
            ratingScore:
              type: integer
              format: int32
              description: >-
                A measure of a party's creditworthiness calculated on the basis of a combination of
                factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile'
    PartyCreditProfile_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            An individual might be evaluated for its worthiness and this evaluation might be based
            on a credit rating given by a credit agency.
          properties:
            creditAgencyName:
              type: string
              description: Name of the credit agency giving the score
            creditAgencyType:
              type: string
              description: Type of the credit agency giving the score
            ratingReference:
              type: string
              description: Reference corresponding to the credit rating
            ratingScore:
              type: integer
              format: int32
              description: >-
                A measure of a party's creditworthiness calculated on the basis of a combination of
                factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile_FVO'
    PartyCreditProfile_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            An individual might be evaluated for its worthiness and this evaluation might be based
            on a credit rating given by a credit agency.
          properties:
            creditAgencyName:
              type: string
              description: Name of the credit agency giving the score
            creditAgencyType:
              type: string
              description: Type of the credit agency giving the score
            ratingReference:
              type: string
              description: Reference corresponding to the credit rating
            ratingScore:
              type: integer
              format: int32
              description: >-
                A measure of a party's creditworthiness calculated on the basis of a combination of
                factors such as their income and credit history
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyCreditProfile: '#/components/schemas/PartyCreditProfile_MVO'
    PartyOrPartyRole:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
        - $ref: '#/components/schemas/Individual'
        - $ref: '#/components/schemas/Organization'
        - $ref: '#/components/schemas/PartyRole'
        - $ref: '#/components/schemas/Supplier'
        - $ref: '#/components/schemas/BusinessPartner'
        - $ref: '#/components/schemas/Consumer'
        - $ref: '#/components/schemas/Producer'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
          Individual: '#/components/schemas/Individual'
          Organization: '#/components/schemas/Organization'
          PartyRole: '#/components/schemas/PartyRole'
          Supplier: '#/components/schemas/Supplier'
          BusinessPartner: '#/components/schemas/BusinessPartner'
          Consumer: '#/components/schemas/Consumer'
          Producer: '#/components/schemas/Producer'
    PartyOrPartyRole_FVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_FVO'
        - $ref: '#/components/schemas/PartyRoleRef_FVO'
        - $ref: '#/components/schemas/Individual_FVO'
        - $ref: '#/components/schemas/Organization_FVO'
        - $ref: '#/components/schemas/PartyRole_FVO'
        - $ref: '#/components/schemas/Supplier_FVO'
        - $ref: '#/components/schemas/BusinessPartner_FVO'
        - $ref: '#/components/schemas/Consumer_FVO'
        - $ref: '#/components/schemas/Producer_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
          Individual: '#/components/schemas/Individual_FVO'
          Organization: '#/components/schemas/Organization_FVO'
          PartyRole: '#/components/schemas/PartyRole_FVO'
          Supplier: '#/components/schemas/Supplier_FVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_FVO'
          Consumer: '#/components/schemas/Consumer_FVO'
          Producer: '#/components/schemas/Producer_FVO'
    PartyOrPartyRole_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
        - $ref: '#/components/schemas/Individual_MVO'
        - $ref: '#/components/schemas/Organization_MVO'
        - $ref: '#/components/schemas/PartyRole_MVO'
        - $ref: '#/components/schemas/Supplier_MVO'
        - $ref: '#/components/schemas/BusinessPartner_MVO'
        - $ref: '#/components/schemas/Consumer_MVO'
        - $ref: '#/components/schemas/Producer_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
          Individual: '#/components/schemas/Individual_MVO'
          Organization: '#/components/schemas/Organization_MVO'
          PartyRole: '#/components/schemas/PartyRole_MVO'
          Supplier: '#/components/schemas/Supplier_MVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_MVO'
          Consumer: '#/components/schemas/Consumer_MVO'
          Producer: '#/components/schemas/Producer_MVO'
    PartyRef:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
    PartyRefOrPartyRoleRef:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef'
        - $ref: '#/components/schemas/PartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef'
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRefOrPartyRoleRef_MVO:
      type: object
      description: ''
      oneOf:
        - $ref: '#/components/schemas/PartyRef_MVO'
        - $ref: '#/components/schemas/PartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PartyRef_FVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_FVO'
    PartyRef_MVO:
      type: object
      description: A Party reference
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRef: '#/components/schemas/PartyRef_MVO'
    PartyRole:
      allOf:
        - $ref: '#/components/schemas/Entity'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic'
              description: Describes the characteristic of a party role.
            account:
              type: array
              items:
                $ref: '#/components/schemas/AccountRef'
            agreement:
              type: array
              items:
                $ref: '#/components/schemas/AgreementRef'
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium'
            paymentMethod:
              type: array
              items:
                $ref: '#/components/schemas/PaymentMethodRef'
            creditProfile:
              type: array
              items:
                $ref: '#/components/schemas/CreditProfile'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole'
          Supplier: '#/components/schemas/Supplier'
          Producer: '#/components/schemas/Producer'
          Consumer: '#/components/schemas/Consumer'
          BusinessPartner: '#/components/schemas/BusinessPartner'
    PartyRoleAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: PartyRoleAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/PartyRoleAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleAttributeValueChangeEvent: '#/components/schemas/PartyRoleAttributeValueChangeEvent'
    PartyRoleAttributeValueChangeEventPayload:
      type: object
      description: PartyRoleAttributeValueChangeEventPayload generic structure
      properties:
        partyRole:
          $ref: '#/components/schemas/PartyRole'
    PartyRoleCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: PartyRoleCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/PartyRoleCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleCreateEvent: '#/components/schemas/PartyRoleCreateEvent'
    PartyRoleCreateEventPayload:
      type: object
      description: PartyRoleCreateEventPayload generic structure
      properties:
        partyRole:
          $ref: '#/components/schemas/PartyRole'
    PartyRoleDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: PartyRoleDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/PartyRoleDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleDeleteEvent: '#/components/schemas/PartyRoleDeleteEvent'
    PartyRoleDeleteEventPayload:
      type: object
      description: PartyRoleDeleteEventPayload generic structure
      properties:
        partyRole:
          $ref: '#/components/schemas/PartyRole'
    PartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef'
    PartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_FVO'
    PartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/EntityRef'
        - type: object
          description: >-
            Party role reference. A party role represents the part played by a party in a given
            context.
          properties:
            partyId:
              type: string
              description: The identifier of the engaged party that is linked to the PartyRole object.
            partyName:
              type: string
              description: The name of the engaged party that is linked to the PartyRole object.
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleRef: '#/components/schemas/PartyRoleRef_MVO'
    PartyRoleSpecification:
      allOf:
        - $ref: '#/components/schemas/EntitySpecification'
        - type: object
          description: >-
            Party role specification. A party role specification gives additional details on the
            part played by a party in a given context.
          properties:
            agreementSpecification:
              type: array
              items:
                $ref: '#/components/schemas/AgreementSpecificationRef'
            permissionSpecificationSet:
              type: array
              items:
                $ref: '#/components/schemas/PermissionSpecificationSetRef'
            status:
              type: string
              description: Used to track the lifecycle status of the partyRoleSpecification.
    PartyRoleSpecificationAttributeValueChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: PartyRoleSpecificationAttributeValueChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/PartyRoleSpecificationAttributeValueChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationAttributeValueChangeEvent: '#/components/schemas/PartyRoleSpecificationAttributeValueChangeEvent'
    PartyRoleSpecificationAttributeValueChangeEventPayload:
      type: object
      description: PartyRoleSpecificationAttributeValueChangeEventPayload generic structure
      properties:
        partyRole:
          $ref: '#/components/schemas/PartyRole'
    PartyRoleSpecificationCreateEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: PartyRoleSpecificationCreateEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/PartyRoleSpecificationCreateEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationCreateEvent: '#/components/schemas/PartyRoleSpecificationCreateEvent'
    PartyRoleSpecificationCreateEventPayload:
      type: object
      description: PartyRoleSpecificationCreateEventPayload generic structure
      properties:
        partyRole:
          $ref: '#/components/schemas/PartyRole'
    PartyRoleSpecificationDeleteEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: PartyRoleSpecificationDeleteEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/PartyRoleSpecificationDeleteEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationDeleteEvent: '#/components/schemas/PartyRoleSpecificationDeleteEvent'
    PartyRoleSpecificationDeleteEventPayload:
      type: object
      description: PartyRoleSpecificationDeleteEventPayload generic structure
      properties:
        partyRole:
          $ref: '#/components/schemas/PartyRole'
    PartyRoleSpecificationRef:
      type: object
      description: >-
        Party role specification reference. A party role specification gives additional details on
        the part played by a party in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef'
    PartyRoleSpecificationRef_FVO:
      type: object
      description: >-
        Party role specification reference. A party role specification gives additional details on
        the part played by a party in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef_FVO'
    PartyRoleSpecificationRef_MVO:
      type: object
      description: >-
        Party role specification reference. A party role specification gives additional details on
        the part played by a party in a given context.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationRef: '#/components/schemas/PartyRoleSpecificationRef_MVO'
    PartyRoleSpecificationStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: PartyRoleSpecificationStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/PartyRoleSpecificationStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleSpecificationStateChangeEvent: '#/components/schemas/PartyRoleSpecificationStateChangeEvent'
    PartyRoleSpecificationStateChangeEventPayload:
      type: object
      description: PartyRoleSpecificationStateChangeEventPayload generic structure
      properties:
        partyRole:
          $ref: '#/components/schemas/PartyRole'
    PartyRoleSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/EntitySpecification_FVO'
        - type: object
          description: >-
            Party role specification. A party role specification gives additional details on the
            part played by a party in a given context.
          properties:
            agreementSpecification:
              type: array
              items:
                $ref: '#/components/schemas/AgreementSpecificationRef_FVO'
            permissionSpecificationSet:
              type: array
              items:
                $ref: '#/components/schemas/PermissionSpecificationSetRef_FVO'
            status:
              type: string
              description: Used to track the lifecycle status of the partyRoleSpecification.
          required:
            - name
    PartyRoleSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/EntitySpecification_MVO'
        - type: object
          description: >-
            Party role specification. A party role specification gives additional details on the
            part played by a party in a given context.
          properties:
            agreementSpecification:
              type: array
              items:
                $ref: '#/components/schemas/AgreementSpecificationRef_MVO'
            permissionSpecificationSet:
              type: array
              items:
                $ref: '#/components/schemas/PermissionSpecificationSetRef_MVO'
            status:
              type: string
              description: Used to track the lifecycle status of the partyRoleSpecification.
    PartyRoleStateChangeEvent:
      allOf:
        - $ref: '#/components/schemas/Event'
        - type: object
          description: PartyRoleStateChangeEvent generic structure
          properties:
            event:
              $ref: '#/components/schemas/PartyRoleStateChangeEventPayload'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRoleStateChangeEvent: '#/components/schemas/PartyRoleStateChangeEvent'
    PartyRoleStateChangeEventPayload:
      type: object
      description: PartyRoleStateChangeEventPayload generic structure
      properties:
        partyRole:
          $ref: '#/components/schemas/PartyRole'
    PartyRole_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef_FVO'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef_FVO'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
              description: Describes the characteristic of a party role.
            account:
              type: array
              items:
                $ref: '#/components/schemas/AccountRef_FVO'
            agreement:
              type: array
              items:
                $ref: '#/components/schemas/AgreementRef_FVO'
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_FVO'
            paymentMethod:
              type: array
              items:
                $ref: '#/components/schemas/PaymentMethodRef_FVO'
            creditProfile:
              type: array
              items:
                $ref: '#/components/schemas/CreditProfile_FVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
          required:
            - name
            - engagedParty
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole_FVO'
          Supplier: '#/components/schemas/Supplier_FVO'
          Producer: '#/components/schemas/Producer_FVO'
          Consumer: '#/components/schemas/Consumer_FVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_FVO'
    PartyRole_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: The part played by a party in a given context.
          properties:
            name:
              type: string
              description: >-
                A word, term, or phrase by which the PartyRole is known and distinguished from other
                PartyRoles. It's the name of the PartyRole unique entity.
            description:
              type: string
              description: A description of the PartyRole.
            role:
              type: string
              description: >-
                Role played by the engagedParty in this context. As role is defined by
                partyRoleSpecification, this role attribute can be used to precise the role defined
                by partyRoleSpecification, or it can be used to define the role in case there is no
                partyRoleSpecification.
            engagedParty:
              $ref: '#/components/schemas/PartyRef_MVO'
            partyRoleSpecification:
              $ref: '#/components/schemas/PartyRoleSpecificationRef_MVO'
            characteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
              description: Describes the characteristic of a party role.
            account:
              type: array
              items:
                $ref: '#/components/schemas/AccountRef_MVO'
            agreement:
              type: array
              items:
                $ref: '#/components/schemas/AgreementRef_MVO'
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_MVO'
            paymentMethod:
              type: array
              items:
                $ref: '#/components/schemas/PaymentMethodRef_MVO'
            creditProfile:
              type: array
              items:
                $ref: '#/components/schemas/CreditProfile_MVO'
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
            status:
              type: string
              description: Used to track the lifecycle status of the party role.
            statusReason:
              type: string
              description: >-
                A string providing an explanation on the value of the status lifecycle. For instance
                if the status is Rejected, statusReason will provide the reason for rejection.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
      discriminator:
        propertyName: '@type'
        mapping:
          PartyRole: '#/components/schemas/PartyRole_MVO'
          Supplier: '#/components/schemas/Supplier_MVO'
          Producer: '#/components/schemas/Producer_MVO'
          Consumer: '#/components/schemas/Consumer_MVO'
          BusinessPartner: '#/components/schemas/BusinessPartner_MVO'
    Party_FVO:
      allOf:
        - $ref: '#/components/schemas/Entity_FVO'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_FVO'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_FVO'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate_FVO'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile_FVO'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_FVO'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party_FVO'
          Organization: '#/components/schemas/Organization_FVO'
          Individual: '#/components/schemas/Individual_FVO'
    Party_MVO:
      allOf:
        - $ref: '#/components/schemas/Entity_MVO'
        - type: object
          description: >-
            Generic and Abstract Party structure used to define commonalities between sub concepts
            of Individual and Organization.
          properties:
            externalReference:
              type: array
              items:
                $ref: '#/components/schemas/ExternalIdentifier_MVO'
              description: >-
                List of identifiers of the Party in an external system, for example when party
                information is imported from a commerce system
            partyCharacteristic:
              type: array
              items:
                $ref: '#/components/schemas/Characteristic_MVO'
              description: List of additional characteristics that a Party can take on.
            taxExemptionCertificate:
              type: array
              items:
                $ref: '#/components/schemas/TaxExemptionCertificate_MVO'
              description: >-
                List of tax exemptions granted to the party. For example, a war veteran might have
                partial exemption from state tax and a full exemption from federal tax
            creditRating:
              type: array
              items:
                $ref: '#/components/schemas/PartyCreditProfile_MVO'
              description: >-
                List of credit profiles and scores for the party, typically received from an
                external credit broker
            relatedParty:
              type: array
              items:
                $ref: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
              description: List of parties and/or party roles related to this party
            contactMedium:
              type: array
              items:
                $ref: '#/components/schemas/ContactMedium_MVO'
              description: 'List of means for contacting the party, e.g. mobile phone, email address'
      discriminator:
        propertyName: '@type'
        mapping:
          Party: '#/components/schemas/Party_MVO'
          Organization: '#/components/schemas/Organization_MVO'
          Individual: '#/components/schemas/Individual_MVO'
    PaymentMethodRef:
      type: object
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct
        debit).
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef'
    PaymentMethodRef_FVO:
      type: object
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct
        debit).
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_FVO'
    PaymentMethodRef_MVO:
      type: object
      description: >-
        PaymentMethod reference. A payment method defines a specific mean of payment (e.g direct
        debit).
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PaymentMethodRef: '#/components/schemas/PaymentMethodRef_MVO'
    PermissionSpecificationSetRef:
      type: object
      description: >-
        A PermissionSpecificationSet defines a set of permissions that can be attached to a party
        role specification. The resulting permissions will then apply to all users that adopt this
        party role.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PermissionSpecificationSetRef: '#/components/schemas/PermissionSpecificationSetRef'
    PermissionSpecificationSetRef_FVO:
      type: object
      description: >-
        A PermissionSpecificationSet defines a set of permissions that can be attached to a party
        role specification. The resulting permissions will then apply to all users that adopt this
        party role.
      allOf:
        - $ref: '#/components/schemas/EntityRef_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          PermissionSpecificationSetRef: '#/components/schemas/PermissionSpecificationSetRef_FVO'
    PermissionSpecificationSetRef_MVO:
      type: object
      description: >-
        A PermissionSpecificationSet defines a set of permissions that can be attached to a party
        role specification. The resulting permissions will then apply to all users that adopt this
        party role.
      allOf:
        - $ref: '#/components/schemas/EntityRef'
      discriminator:
        propertyName: '@type'
        mapping:
          PermissionSpecificationSetRef: '#/components/schemas/PermissionSpecificationSetRef_MVO'
    PhoneContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: >-
            Describes a phone number that could be used to contact a party (an individual or an
            organization)
          properties:
            phoneNumber:
              type: string
              description: The phone number of the contact
    PhoneContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_FVO'
        - type: object
          description: >-
            Describes a phone number that could be used to contact a party (an individual or an
            organization)
          properties:
            phoneNumber:
              type: string
              description: The phone number of the contact
    PhoneContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: >-
            Describes a phone number that could be used to contact a party (an individual or an
            organization)
          properties:
            phoneNumber:
              type: string
              description: The phone number of the contact
    Producer:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Producer_FVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Producer_MVO:
      type: object
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    Quantity:
      type: object
      description: An amount in a given unit
      properties:
        amount:
          type: number
          format: float
          default: 1
          description: Numeric value in a given unit
        units:
          type: string
          description: Unit
    RelatedPartyOrPartyRole:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole'
    RelatedPartyOrPartyRole_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole_FVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole_FVO'
    RelatedPartyOrPartyRole_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyOrPartyRole_MVO'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyOrPartyRole: '#/components/schemas/RelatedPartyOrPartyRole_MVO'
    RelatedPartyRefOrPartyRoleRef:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef'
    RelatedPartyRefOrPartyRoleRef_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef'
          required:
            - role
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_FVO'
    RelatedPartyRefOrPartyRoleRef_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            RelatedParty reference. A related party defines party or party role or its reference,
            linked to a specific entity
          properties:
            role:
              description: >-
                Role played by the related party or party role in the context of the specific entity
                it is linked to. Such as 'initiator', 'customer',  'salesAgent', 'user'
              type: string
            partyOrPartyRole:
              $ref: '#/components/schemas/PartyRefOrPartyRoleRef_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          RelatedPartyRefOrPartyRoleRef: '#/components/schemas/RelatedPartyRefOrPartyRoleRef_MVO'
    Skill:
      type: object
      description: >-
        Skills evaluated for an individual with a level and possibly with a limited validity when an
        obsolescence is defined (Ex: the first-aid certificate first level is limited to one year
        and an update training is required each year to keep the level).
      properties:
        skillCode:
          type: string
          description: Code of the skill
        skillName:
          type: string
          description: 'Name of the skill, such as Java language'
        evaluatedLevel:
          type: string
          description: Level of expertise in a skill evaluated for an individual
        comment:
          type: string
          description: A free text comment linked to the evaluation done
        validFor:
          $ref: '#/components/schemas/TimePeriod'
    SocialContactMedium:
      allOf:
        - $ref: '#/components/schemas/ContactMedium'
        - type: object
          description: >-
            Describes a social media identifier that could be used to contact a party (an individual
            or an organization)
          properties:
            socialNetworkId:
              type: string
              description: Identifier as a member of a social network
    SocialContactMedium_FVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_FVO'
        - type: object
          description: >-
            Describes a social media identifier that could be used to contact a party (an individual
            or an organization)
          properties:
            socialNetworkId:
              type: string
              description: Identifier as a member of a social network
    SocialContactMedium_MVO:
      allOf:
        - $ref: '#/components/schemas/ContactMedium_MVO'
        - type: object
          description: >-
            Describes a social media identifier that could be used to contact a party (an individual
            or an organization)
          properties:
            socialNetworkId:
              type: string
              description: Identifier as a member of a social network
    StringArrayCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              items:
                type: string
    StringArrayCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is an array of strings
          properties:
            value:
              type: array
              items:
                type: string
    StringArrayCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of strings
          properties:
            value:
              type: array
              items:
                type: string
    StringArrayCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is an array of strings
          properties:
            value:
              type: array
              items:
                type: string
    StringArrayCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              items:
                type: string
          required:
            - value
    StringArrayCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is an array of String(s).
          properties:
            value:
              type: array
              items:
                type: string
          required:
            - value
    StringCharacteristic:
      allOf:
        - $ref: '#/components/schemas/Characteristic'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristicValueSpecification:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification'
        - type: object
          description: A specification for a characteristic for which the value is a string
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristicValueSpecification_FVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_FVO'
        - type: object
          description: A specification for a characteristic for which the value is a string
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristicValueSpecification_MVO:
      allOf:
        - $ref: '#/components/schemas/CharacteristicValueSpecification_MVO'
        - type: object
          description: A specification for a characteristic for which the value is a string
          properties:
            value:
              type: string
              description: Value of the characteristic
    StringCharacteristic_FVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_FVO'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
          required:
            - value
    StringCharacteristic_MVO:
      allOf:
        - $ref: '#/components/schemas/Characteristic_MVO'
        - type: object
          description: A characteristic which value is a String.
          properties:
            value:
              type: string
              description: Value of the characteristic
          required:
            - value
    Supplier:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole'
    Supplier_FVO:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole_FVO'
    Supplier_MVO:
      type: object
      description: 'When business partner is the Supplier '
      allOf:
        - $ref: '#/components/schemas/PartyRole_MVO'
    TargetEntitySchema:
      type: object
      description: >-
        The reference object to the schema and type of target entity which is described by a
        specification
      properties:
        '@type':
          type: string
          description: Class type of the target entity
        '@schemaLocation':
          type: string
          description: This field provides a link to the schema describing the target entity
    TargetEntitySchema_FVO:
      type: object
      description: >-
        The reference object to the schema and type of target entity which is described by a
        specification
      properties:
        '@type':
          type: string
          description: Class type of the target entity
        '@schemaLocation':
          type: string
          description: This field provides a link to the schema describing the target entity
      required:
        - '@type'
        - '@schemaLocation'
    TargetEntitySchema_MVO:
      type: object
      description: >-
        The reference object to the schema and type of target entity which is described by a
        specification
      properties:
        '@type':
          type: string
          description: Class type of the target entity
        '@schemaLocation':
          type: string
          description: This field provides a link to the schema describing the target entity
    TaxDefinition:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. For
            example, there are many different types of tax (Federal Tax levied by the US Government,
            State Tax levied by the State of California, City Tax levied by the City of Los Angeles,
            etc.).
          properties:
            id:
              type: string
              description: Unique identifier of the tax.
            name:
              type: string
              description: Tax name.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            jurisdictionName:
              type: string
              description: Name of the jurisdiction that levies the tax
              example: USA
            jurisdictionLevel:
              type: string
              description: Level of the jurisdiction that levies the tax
              example: Country
            taxType:
              type: string
              description: Type of the tax.
              example: VAT
      discriminator:
        propertyName: '@type'
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition'
    TaxDefinition_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. For
            example, there are many different types of tax (Federal Tax levied by the US Government,
            State Tax levied by the State of California, City Tax levied by the City of Los Angeles,
            etc.).
          properties:
            id:
              type: string
              description: Unique identifier of the tax.
            name:
              type: string
              description: Tax name.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            jurisdictionName:
              type: string
              description: Name of the jurisdiction that levies the tax
              example: USA
            jurisdictionLevel:
              type: string
              description: Level of the jurisdiction that levies the tax
              example: Country
            taxType:
              type: string
              description: Type of the tax.
              example: VAT
      discriminator:
        propertyName: '@type'
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition_FVO'
    TaxDefinition_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            Reference of a tax definition. A tax is levied by an authorized tax jurisdiction. For
            example, there are many different types of tax (Federal Tax levied by the US Government,
            State Tax levied by the State of California, City Tax levied by the City of Los Angeles,
            etc.).
          properties:
            id:
              type: string
              description: Unique identifier of the tax.
            name:
              type: string
              description: Tax name.
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            jurisdictionName:
              type: string
              description: Name of the jurisdiction that levies the tax
              example: USA
            jurisdictionLevel:
              type: string
              description: Level of the jurisdiction that levies the tax
              example: Country
            taxType:
              type: string
              description: Type of the tax.
              example: VAT
      discriminator:
        propertyName: '@type'
        mapping:
          TaxDefinition: '#/components/schemas/TaxDefinition_MVO'
    TaxExemptionCertificate:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            id:
              type: string
              description: Identifier of the tax exemption within list of the exemptions
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate'
    TaxExemptionCertificate_FVO:
      allOf:
        - $ref: '#/components/schemas/Extensible_FVO'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            id:
              type: string
              description: Identifier of the tax exemption within list of the exemptions
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition_FVO'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_FVO'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate_FVO'
    TaxExemptionCertificate_MVO:
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          description: >-
            A tax exemption certificate represents a tax exemption granted to a party (individual or
            organization) by a tax jurisdiction which may be a city, state, country,... An exemption
            has a certificate identifier (received from the jurisdiction that levied the tax) and a
            validity period. An exemption is per tax types and determines for each type of tax what
            portion of the tax is exempted (partial by percentage or complete) via the tax
            definition.
          properties:
            id:
              type: string
              description: Identifier of the tax exemption within list of the exemptions
            taxDefinition:
              type: array
              items:
                $ref: '#/components/schemas/TaxDefinition_MVO'
              description: >-
                A list of taxes that are covered by the exemption, e.g. City Tax, State Tax. The
                definition would include the exemption (e.g. for a rate exemption 0% would be a full
                exemption, 5% could be a partial exemption if the actual rate was 10%).
            validFor:
              $ref: '#/components/schemas/TimePeriod'
            certificateNumber:
              type: string
              description: >-
                Identifier of a document that shows proof of exemption from taxes for the taxing
                jurisdiction
            issuingJurisdiction:
              type: string
              description: Name of the jurisdiction that issued the exemption
              example: USA
            reason:
              type: string
              description: Reason for the tax exemption
            attachment:
              $ref: '#/components/schemas/AttachmentRefOrValue_MVO'
      discriminator:
        propertyName: '@type'
        mapping:
          TaxExemptionCertificate: '#/components/schemas/TaxExemptionCertificate_MVO'
    TimePeriod:
      type: object
      description: 'A period of time, either as a deadline (endDateTime only) a startDateTime only, or both'
      properties:
        startDateTime:
          description: 'Start of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
        endDateTime:
          description: 'End of the time period, using IETC-RFC-3339 format'
          type: string
          format: date-time
          example: '1985-04-12T23:20:50.52Z'
    Error:
      discriminator:
        propertyName: '@type'
        mapping:
          Error: '#/components/schemas/Error'
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - type: object
          required:
            - code
            - reason
          properties:
            code:
              type: string
              description: 'Application relevant detail, defined in the API or a common list.'
            reason:
              type: string
              description: Explanation of the reason for the error which can be shown to a client user.
            message:
              type: string
              description: >-
                More details and corrective actions related to the error which can be shown to a
                client user.
            status:
              type: string
              description: HTTP Error code extension
            referenceError:
              type: string
              description: URI of documentation describing the error.
      description: 'Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)'
    Hub_FVO:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      required:
        - callback
      allOf:
        - $ref: '#/components/schemas/Extensible'
        - properties:
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
    Hub:
      type: object
      description: >-
        Sets the communication endpoint address the service instance must use to deliver
        notification information
      allOf:
        - $ref: '#/components/schemas/Entity'
        - properties:
            id:
              type: string
              description: Id of the listener
            callback:
              type: string
              description: The callback being registered.
            query:
              type: string
              description: additional data to be passed
          required:
            - callback
    JsonPatch:
      type: object
      description: A JSONPatch document as defined by RFC 6902
      required:
        - op
        - path
      properties:
        op:
          type: string
          description: The operation to be performed
          enum:
            - add
            - remove
            - replace
            - move
            - copy
            - test
        path:
          type: string
          description: A JSON-Pointer
        value:
          description: The value to be used within the operations.
        from:
          type: string
          description: A string containing a JSON Pointer value.
    JsonPatchOperations:
      description: JSONPatch Operations document as defined by RFC 6902
      type: array
      items:
        $ref: '#/components/schemas/JsonPatch'
  parameters:
    Id:
      name: id
      required: true
      schema:
        type: string
      in: path
      description: Identifier of the Resource
    Fields:
      name: fields
      in: query
      description: Comma-separated properties to be provided in response
      schema:
        type: string
    Offset:
      name: offset
      in: query
      description: Requested index for start of resources to be provided in response
      schema:
        type: integer
    Limit:
      name: limit
      in: query
      description: Requested number of resources to be provided in response
      schema:
        type: integer
  requestBodies:
    PartyRole_FVO:
      description: The PartyRole to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyRole_FVO'
          examples:
            PartyRole_create_example:
              $ref: '#/components/examples/PartyRole_create_example_request'
      required: true
    PartyRole_MVO:
      description: The PartyRole to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyRole_MVO'
          examples:
            PartyRole_partialupdate_example_application_json:
              $ref: '#/components/examples/PartyRole_partialupdate_example_application_json_request'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/PartyRole_MVO'
          examples:
            PartyRole_partialupdate_example_application_merge_patch_json:
              $ref: >-
                #/components/examples/PartyRole_partialupdate_example_application_merge_patch_json_request
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            PartyRole_partialupdate_example_application_json_patch_json:
              $ref: >-
                #/components/examples/PartyRole_partialupdate_example_application_json_patch_json_request
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            PartyRole_partialupdate_example_application_json_patch_query_json:
              $ref: >-
                #/components/examples/PartyRole_partialupdate_example_application_json_patch_query_json_request
      required: true
    PartyRoleCreateEvent:
      description: PartyRole create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyRoleCreateEvent'
          examples:
            PartyRoleCreateEvent:
              $ref: '#/components/examples/PartyRoleCreateEvent_request'
      required: true
    PartyRoleAttributeValueChangeEvent:
      description: PartyRole attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyRoleAttributeValueChangeEvent'
          examples:
            PartyRoleAttributeValueChangeEvent:
              $ref: '#/components/examples/PartyRoleAttributeValueChangeEvent_request'
      required: true
    PartyRoleStateChangeEvent:
      description: PartyRole stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyRoleStateChangeEvent'
          examples:
            PartyRoleStateChangeEvent:
              $ref: '#/components/examples/PartyRoleStateChangeEvent_request'
      required: true
    PartyRoleDeleteEvent:
      description: PartyRole delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyRoleDeleteEvent'
          examples:
            PartyRoleDeleteEvent:
              $ref: '#/components/examples/PartyRoleDeleteEvent_request'
      required: true
    PartyRoleSpecification_FVO:
      description: The PartyRoleSpecification to be created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyRoleSpecification_FVO'
          examples:
            PartyRoleSpecification_create_example:
              $ref: '#/components/examples/PartyRoleSpecification_create_example_request'
      required: true
    PartyRoleSpecification_MVO:
      description: The PartyRoleSpecification to be patched
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyRoleSpecification_MVO'
          examples:
            PartyRoleSpecification_partialupdate_example_application_json:
              $ref: >-
                #/components/examples/PartyRoleSpecification_partialupdate_example_application_json_request
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/PartyRoleSpecification_MVO'
          examples:
            PartyRoleSpecification_partialupdate_example_application_merge_patch_json:
              $ref: >-
                #/components/examples/PartyRoleSpecification_partialupdate_example_application_merge_patch_json_request
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            PartyRoleSpecification_partialupdate_example_application_json_patch_json:
              $ref: >-
                #/components/examples/PartyRoleSpecification_partialupdate_example_application_json_patch_json_request
        application/json-patch-query+json:
          schema:
            $ref: '#/components/schemas/JsonPatchOperations'
          examples:
            PartyRoleSpecification_partialupdate_example_application_json_patch_query_json:
              $ref: >-
                #/components/examples/PartyRoleSpecification_partialupdate_example_application_json_patch_query_json_request
      required: true
    PartyRoleSpecificationCreateEvent:
      description: PartyRoleSpecification create Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyRoleSpecificationCreateEvent'
          examples:
            PartyRoleSpecificationCreateEvent:
              $ref: '#/components/examples/PartyRoleSpecificationCreateEvent_request'
      required: true
    PartyRoleSpecificationAttributeValueChangeEvent:
      description: PartyRoleSpecification attributeValueChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyRoleSpecificationAttributeValueChangeEvent'
          examples:
            PartyRoleSpecificationAttributeValueChangeEvent:
              $ref: '#/components/examples/PartyRoleSpecificationAttributeValueChangeEvent_request'
      required: true
    PartyRoleSpecificationStateChangeEvent:
      description: PartyRoleSpecification stateChange Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyRoleSpecificationStateChangeEvent'
          examples:
            PartyRoleSpecificationStateChangeEvent:
              $ref: '#/components/examples/PartyRoleSpecificationStateChangeEvent_request'
      required: true
    PartyRoleSpecificationDeleteEvent:
      description: PartyRoleSpecification delete Event payload
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyRoleSpecificationDeleteEvent'
          examples:
            PartyRoleSpecificationDeleteEvent:
              $ref: '#/components/examples/PartyRoleSpecificationDeleteEvent_request'
      required: true
    Hub_FVO:
      description: Data containing the callback endpoint to deliver the information
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub_FVO'
      required: true
  responses:
    '200':
      description: OK
    '202':
      description: Accepted
    '204':
      description: Deleted
    '400':
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '401':
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '403':
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '404':
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '405':
      description: Method Not allowed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '409':
      description: Conflict
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '500':
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '501':
      description: Not Implemented
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    '503':
      description: Service Unavailable
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    200PartyRoleArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PartyRole'
          examples:
            PartyRole_list_full_example:
              $ref: '#/components/examples/PartyRole_list_full_example_response'
            PartyRole_list_example:
              $ref: '#/components/examples/PartyRole_list_example_response'
    200PartyRole_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyRole'
          examples:
            PartyRole_retrieve_example:
              $ref: '#/components/examples/PartyRole_retrieve_example_response'
    200PartyRole_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyRole'
          examples:
            PartyRole_partialupdate_example_application_json:
              $ref: '#/components/examples/PartyRole_partialupdate_example_application_json_response'
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/PartyRole'
          examples:
            PartyRole_partialupdate_example_application_merge_patch_json:
              $ref: >-
                #/components/examples/PartyRole_partialupdate_example_application_merge_patch_json_response
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/PartyRole'
              - type: array
                items:
                  $ref: '#/components/schemas/PartyRole'
              - type: string
                nullable: true
          examples:
            PartyRole_partialupdate_example_application_json_patch_json:
              $ref: >-
                #/components/examples/PartyRole_partialupdate_example_application_json_patch_json_response
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/PartyRole'
              - type: array
                items:
                  $ref: '#/components/schemas/PartyRole'
              - type: string
                nullable: true
          examples:
            PartyRole_partialupdate_example_application_json_patch_query_json:
              $ref: >-
                #/components/examples/PartyRole_partialupdate_example_application_json_patch_query_json_response
    201PartyRole:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyRole'
          examples:
            PartyRole_create_example:
              $ref: '#/components/examples/PartyRole_create_example_response'
    200PartyRoleSpecificationArray:
      description: Success
      headers:
        X-Total-Count:
          $ref: '#/components/headers/X-Total-Count'
        X-Result-Count:
          $ref: '#/components/headers/X-Result-Count'
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PartyRoleSpecification'
          examples:
            PartyRoleSpecification_list_full_example:
              $ref: '#/components/examples/PartyRoleSpecification_list_full_example_response'
            PartyRoleSpecification_list_example:
              $ref: '#/components/examples/PartyRoleSpecification_list_example_response'
    200PartyRoleSpecification_Get:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyRoleSpecification'
          examples:
            PartyRoleSpecification_retrieve_example:
              $ref: '#/components/examples/PartyRoleSpecification_retrieve_example_response'
    200PartyRoleSpecification_Patch:
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyRoleSpecification'
          examples:
            PartyRoleSpecification_partialupdate_example_application_json:
              $ref: >-
                #/components/examples/PartyRoleSpecification_partialupdate_example_application_json_response
        application/merge-patch+json:
          schema:
            $ref: '#/components/schemas/PartyRoleSpecification'
          examples:
            PartyRoleSpecification_partialupdate_example_application_merge_patch_json:
              $ref: >-
                #/components/examples/PartyRoleSpecification_partialupdate_example_application_merge_patch_json_response
        application/json-patch+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/PartyRoleSpecification'
              - type: array
                items:
                  $ref: '#/components/schemas/PartyRoleSpecification'
              - type: string
                nullable: true
          examples:
            PartyRoleSpecification_partialupdate_example_application_json_patch_json:
              $ref: >-
                #/components/examples/PartyRoleSpecification_partialupdate_example_application_json_patch_json_response
        application/json-patch-query+json:
          schema:
            oneOf:
              - $ref: '#/components/schemas/PartyRoleSpecification'
              - type: array
                items:
                  $ref: '#/components/schemas/PartyRoleSpecification'
              - type: string
                nullable: true
          examples:
            PartyRoleSpecification_partialupdate_example_application_json_patch_query_json:
              $ref: >-
                #/components/examples/PartyRoleSpecification_partialupdate_example_application_json_patch_query_json_response
    201PartyRoleSpecification:
      description: OK/Created
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PartyRoleSpecification'
          examples:
            PartyRoleSpecification_create_example:
              $ref: '#/components/examples/PartyRoleSpecification_create_example_response'
    Error:
      description: Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Hub:
      description: Notified
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Hub'
  headers:
    X-Total-Count:
      description: Total number of items matching criteria
      schema:
        type: integer
    X-Result-Count:
      description: Actual number of items returned in the response body
      schema:
        type: integer
  securitySchemes: {}
  examples:
    PartyRole_list_full_example_response:
      value:
        - '@type': PartyRole
          href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRole/7321-7c0d'
          id: 7321-7c0d
          name: Mobile catalog administrator
          role: CatalogAdmin
          engagedParty:
            '@type': PartyRef
            href: 'https:/host:port/tmf-api/partyManagement/v2/individual/3b1c-74f1'
            id: 3b1c-74f1
            name: Jean Pontus
            '@referredType': Individual
          partyRoleSpecification:
            '@type': PartyRoleSpecificationRef
            href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
            id: '5713'
            name: Catalog administrator
          characteristic:
            - '@type': StringCharacteristic
              name: CatalogDomain
              valueType: string
              value: mobile catalog
          contactMedium:
            - '@type': PhoneContactMedium
              id: '1'
              phoneNumber: '+3311223344'
          relatedParty:
            - '@type': RelatedPartyOrPartyRole
              role: manager
              partyOrPartyRole:
                '@type': PartyRef
                href: 'https:/host:port/tmf-api/partyManagement/v4/individual/1a0b-961f'
                id: 1a0b-961f
                name: Gustave Flaubert
                '@referredType': Individual
          status: validationInProgress
          validFor:
            startDateTime: '2022-06-24T00:00:00.000Z'
            endDateTime: '2024-06-24T00:00:00.000Z'
      description: Here's an example of a request for retrieving PartyRole resources.
    PartyRole_list_example_response:
      value:
        - '@type': PartyRole
          id: 7321-7c0d
          name: Mobile catalog administrator
          role: CatalogAdmin
          engagedParty:
            '@type': PartyRef
            href: 'https:/host:port/tmf-api/partyManagement/v2/individual/3b1c-74f1'
            id: 3b1c-74f1
            name: Jean Pontus
            '@referredType': Individual
        - '@type': PartyRole
          id: 567c-df01
          name: Telco operator employee
          role: Employee
          engagedParty:
            '@type': PartyRef
            href: 'https:/host:port/tmf-api/partyManagement/v2/individual/3b1c-74f1'
            id: 3b1c-74f1
            name: Jean Pontus
            '@referredType': Individual
        - '@type': PartyRole
          id: 6d0a-aac7
          name: Catalog administration tool user
          role: CatalogToolingUser
          engagedParty:
            '@type': PartyRef
            href: 'https:/host:port/tmf-api/partyManagement/v2/individual/3b1c-74f1'
            id: 3b1c-74f1
            name: Jean Pontus
            '@referredType': Individual
      description: Here's an example of a request for retrieving PartyRole resources.
    PartyRole_retrieve_example_response:
      value:
        '@type': PartyRole
        href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRole/7321-7c0d'
        id: 7321-7c0d
        name: Mobile catalog administrator
        role: CatalogAdmin
        engagedParty:
          '@type': PartyRef
          href: 'https:/host:port/tmf-api/partyManagement/v2/individual/3b1c-74f1'
          id: 3b1c-74f1
          name: Jean Pontus
          '@referredType': Individual
        partyRoleSpecification:
          '@type': PartyRoleSpecificationRef
          href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
          id: '5713'
          name: Catalog administrator
        characteristic:
          - '@type': StringCharacteristic
            name: CatalogDomain
            valueType: string
            value: mobile catalog
        contactMedium:
          - '@type': PhoneContactMedium
            id: '1'
            phoneNumber: '+3311223344'
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: manager
            partyOrPartyRole:
              '@type': PartyRef
              href: 'https:/host:port/tmf-api/partyManagement/v4/individual/1a0b-961f'
              id: 1a0b-961f
              name: Gustave Flaubert
              '@referredType': Individual
        status: validationInProgress
        validFor:
          startDateTime: '2022-06-24T00:00:00.000Z'
          endDateTime: '2024-06-24T00:00:00.000Z'
      description: Here's an example of a request for retrieving a PartyRole resource
    PartyRoleSpecification_list_full_example_response:
      value:
        - '@type': PartyRoleSpecification
          href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
          id: '5713'
          name: Catalog administration
          specCharacteristic:
            - '@type': CharacteristicSpecification
              id: '1'
              name: CatalogDomain
              valueType: string
              characteristicValueSpecification:
                - '@type': StringCharacteristicValueSpecification
                  value: mobile catalog
                  valueType: string
                - '@type': StringCharacteristicValueSpecification
                  value: internet/TV catalog
                  valueType: string
                - '@type': StringCharacteristicValueSpecification
                  value: B2B catalog
                  valueType: string
          relatedParty:
            - '@type': RelatedPartyOrPartyRole
              role: Rights&access manager
              partyOrPartyRole:
                '@type': PartyRef
                href: 'https:/host:port/tmf-api/partyManagement/v4/individual/62ac-01fb'
                id: 62ac-01fb
                name: John Doe
                '@referredType': Individual
          permissionSpecificationSet:
            - '@type': PermissionSpecificationSetRef
              href: >-
                https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/2473-dc10
              id: 2473-dc10
            - '@type': PermissionSpecificationSetRef
              href: >-
                https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/920e-01df
              id: 920e-01df
          lifecycleStatus: validationInProgress
          validFor:
            startDateTime: '2022-06-01T00:00:00.000Z'
      description: Here's an example of a request for retrieving PartyRoleSpecification resources.
    PartyRoleSpecification_list_example_response:
      value:
        - '@type': PartyRoleSpecification
          id: '5713'
          name: Catalog administration
          lifecycleStatus: validated
        - '@type': PartyRoleSpecification
          id: '8016'
          name: Human resources member
          lifecycleStatus: validated
        - '@type': PartyRoleSpecification
          id: '6540'
          name: Employees vacation validation
          lifecycleStatus: validated
      description: Here's an example of a request for retrieving PartyRoleSpecification resources.
    PartyRoleSpecification_retrieve_example_response:
      value:
        '@type': PartyRoleSpecification
        href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
        id: '5713'
        name: Catalog administration
        specCharacteristic:
          - '@type': CharacteristicSpecification
            name: CatalogDomain
            valueType: string
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                value: mobile catalog
                valueType: string
              - '@type': StringCharacteristicValueSpecification
                value: internet/TV catalog
                valueType: string
              - '@type': StringCharacteristicValueSpecification
                value: B2B catalog
                valueType: string
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: Rights&access manager
            partyOrPartyRole:
              '@type': PartyRef
              href: 'https:/host:port/tmf-api/partyManagement/v4/individual/62ac-01fb'
              id: 62ac-01fb
              name: John Doe
              '@referredType': Individual
        permissionSpecificationSet:
          - '@type': PermissionSpecificationSetRef
            href: >-
              https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/2473-dc10
            id: 2473-dc10
          - '@type': PermissionSpecificationSetRef
            href: >-
              https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/920e-01df
            id: 920e-01df
        lifecycleStatus: validationInProgress
        validFor:
          startDateTime: '2022-06-01T00:00:00.000Z'
      description: Here's an example of a request for retrieving a PartyRoleSpecification resource
    PartyRole_create_example_request:
      value:
        '@type': PartyRole
        name: Mobile catalog administrator
        role: CatalogAdmin
        engagedParty:
          '@type': PartyRef
          href: 'https:/host:port/tmf-api/partyManagement/v2/individual/3b1c-74f1'
          id: 3b1c-74f1
          name: Jean Pontus
          '@referredType': Individual
        partyRoleSpecification:
          '@type': PartyRoleSpecificationRef
          href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
          id: '5713'
          name: Catalog administrator
        characteristic:
          - '@type': StringCharacteristic
            name: CatalogDomain
            valueType: string
            value: mobile catalog
        contactMedium:
          - '@type': PhoneContactMedium
            id: '1'
            phoneNumber: '+3311223344'
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: manager
            partyOrPartyRole:
              '@type': PartyRef
              href: 'https:/host:port/tmf-api/partyManagement/v4/individual/1a0b-961f'
              id: 1a0b-961f
              name: Gustave Flaubert
              '@referredType': Individual
        status: validationInProgress
        validFor:
          startDateTime: '2022-06-24T00:00:00.000Z'
          endDateTime: '2024-06-24T00:00:00.000Z'
      description: >-
        POST Resource request example - only a subset of Resource attributes are used in this
        example.
    PartyRole_create_example_response:
      value:
        '@type': PartyRole
        href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRole/7321-7c0d'
        id: 7321-7c0d
        name: Mobile catalog administrator
        role: CatalogAdmin
        engagedParty:
          '@type': PartyRef
          href: 'https:/host:port/tmf-api/partyManagement/v2/individual/3b1c-74f1'
          id: 3b1c-74f1
          name: Jean Pontus
          '@referredType': Individual
        partyRoleSpecification:
          '@type': PartyRoleSpecificationRef
          href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
          id: '5713'
          name: Catalog administrator
        characteristic:
          - '@type': StringCharacteristic
            name: CatalogDomain
            valueType: string
            value: mobile catalog
        contactMedium:
          - '@type': PhoneContactMedium
            id: '1'
            phoneNumber: '+3311223344'
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: manager
            partyOrPartyRole:
              '@type': PartyRef
              href: 'https:/host:port/tmf-api/partyManagement/v4/individual/1a0b-961f'
              id: 1a0b-961f
              name: Gustave Flaubert
              '@referredType': Individual
        status: validationInProgress
        validFor:
          startDateTime: '2022-06-24T00:00:00.000Z'
          endDateTime: '2024-06-24T00:00:00.000Z'
      description: POST Resource response description.
    PartyRoleSpecification_create_example_request:
      value:
        '@type': PartyRoleSpecification
        name: Catalog administration
        specCharacteristic:
          - '@type': CharacteristicSpecification
            id: '1'
            name: CatalogDomain
            valueType: string
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                value: mobile catalog
                valueType: string
              - '@type': StringCharacteristicValueSpecification
                value: internet/TV catalog
                valueType: string
              - '@type': StringCharacteristicValueSpecification
                value: B2B catalog
                valueType: string
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: Rights&access manager
            partyOrPartyRole:
              '@type': PartyRef
              href: 'https:/host:port/tmf-api/partyManagement/v4/individual/62ac-01fb'
              id: 62ac-01fb
              name: John Doe
              '@referredType': Individual
        permissionSpecificationSet:
          - '@type': PermissionSpecificationSetRef
            href: >-
              https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/2473-dc10
            id: 2473-dc10
          - '@type': PermissionSpecificationSetRef
            href: >-
              https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/920e-01df
            id: 920e-01df
        validFor:
          startDateTime: '2022-06-01T00:00:00.000Z'
      description: >-
        POST Resource request example - only a subset of Resource attributes are used in this
        example.
    PartyRoleSpecification_create_example_response:
      value:
        '@type': PartyRoleSpecification
        href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
        id: '5713'
        name: Catalog administration
        specCharacteristic:
          - '@type': CharacteristicSpecification
            id: '1'
            name: CatalogDomain
            valueType: string
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                value: mobile catalog
                valueType: string
              - '@type': StringCharacteristicValueSpecification
                value: internet/TV catalog
                valueType: string
              - '@type': StringCharacteristicValueSpecification
                value: B2B catalog
                valueType: string
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: Rights&access manager
            partyOrPartyRole:
              '@type': PartyRef
              href: 'https:/host:port/tmf-api/partyManagement/v4/individual/62ac-01fb'
              id: 62ac-01fb
              name: John Doe
              '@referredType': Individual
        permissionSpecificationSet:
          - '@type': PermissionSpecificationSetRef
            href: >-
              https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/2473-dc10
            id: 2473-dc10
          - '@type': PermissionSpecificationSetRef
            href: >-
              https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/920e-01df
            id: 920e-01df
        lifecycleStatus: validationInProgress
        validFor:
          startDateTime: '2022-06-01T00:00:00.000Z'
      description: POST Resource response description.
    PartyRole_partialupdate_example_application_json_request:
      value:
        '@type': PartyRole
        status: validated
      description: >-
        Here's an example of a request for updating a PartyRole resource - set status to validated.
        This example illustrates patch using application/json.
    PartyRole_partialupdate_example_application_json_response:
      value:
        '@type': PartyRole
        href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRole/7321-7c0d'
        id: 7321-7c0d
        name: Mobile catalog administrator
        role: CatalogAdmin
        engagedParty:
          '@type': PartyRef
          href: 'https:/host:port/tmf-api/partyManagement/v2/individual/3b1c-74f1'
          id: 3b1c-74f1
          name: Jean Pontus
          '@referredType': Individual
        partyRoleSpecification:
          '@type': PartyRoleSpecificationRef
          href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
          id: '5713'
          name: Catalog administrator
        characteristic:
          - '@type': StringCharacteristic
            name: CatalogDomain
            valueType: string
            value: mobile catalog
        contactMedium:
          - '@type': PhoneContactMedium
            id: '1'
            phoneNumber: '+3311223344'
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: manager
            partyOrPartyRole:
              '@type': PartyRef
              href: 'https:/host:port/tmf-api/partyManagement/v4/individual/1a0b-961f'
              id: 1a0b-961f
              name: Gustave Flaubert
              '@referredType': Individual
        status: validated
        validFor:
          startDateTime: '2022-06-24T00:00:00.000Z'
          endDateTime: '2024-06-24T00:00:00.000Z'
      description: Response message
    PartyRole_partialupdate_example_application_merge_patch_json_request:
      value:
        '@type': PartyRole
        status: validated
      description: >-
        Here's an example of a request for updating a PartyRole resource - set status to validated.
        This example illustrates patch using application/merge-patch+json.
    PartyRole_partialupdate_example_application_merge_patch_json_response:
      value:
        '@type': PartyRole
        href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRole/7321-7c0d'
        id: 7321-7c0d
        name: Mobile catalog administrator
        role: CatalogAdmin
        engagedParty:
          '@type': PartyRef
          href: 'https:/host:port/tmf-api/partyManagement/v2/individual/3b1c-74f1'
          id: 3b1c-74f1
          name: Jean Pontus
          '@referredType': Individual
        partyRoleSpecification:
          '@type': PartyRoleSpecificationRef
          href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
          id: '5713'
          name: Catalog administrator
        characteristic:
          - '@type': StringCharacteristic
            name: CatalogDomain
            valueType: string
            value: mobile catalog
        contactMedium:
          - '@type': PhoneContactMedium
            id: '1'
            phoneNumber: '+3311223344'
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: manager
            partyOrPartyRole:
              '@type': PartyRef
              href: 'https:/host:port/tmf-api/partyManagement/v4/individual/1a0b-961f'
              id: 1a0b-961f
              name: Gustave Flaubert
              '@referredType': Individual
        status: validated
        validFor:
          startDateTime: '2022-06-24T00:00:00.000Z'
          endDateTime: '2024-06-24T00:00:00.000Z'
      description: Response message
    PartyRole_partialupdate_example_application_json_patch_json_request:
      value:
        - op: replace
          path: /status
          value: validated
      description: >-
        Here's an example of a request for updating a PartyRole resource - set status to validated.
        This example illustrates patch using application/json-patch+json.
    PartyRole_partialupdate_example_application_json_patch_json_response:
      value:
        '@type': PartyRole
        href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRole/7321-7c0d'
        id: 7321-7c0d
        name: Mobile catalog administrator
        role: CatalogAdmin
        engagedParty:
          '@type': PartyRef
          href: 'https:/host:port/tmf-api/partyManagement/v2/individual/3b1c-74f1'
          id: 3b1c-74f1
          name: Jean Pontus
          '@referredType': Individual
        partyRoleSpecification:
          '@type': PartyRoleSpecificationRef
          href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
          id: '5713'
          name: Catalog administrator
        characteristic:
          - '@type': StringCharacteristic
            name: CatalogDomain
            valueType: string
            value: mobile catalog
        contactMedium:
          - '@type': PhoneContactMedium
            id: '1'
            phoneNumber: '+3311223344'
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: manager
            partyOrPartyRole:
              '@type': PartyRef
              href: 'https:/host:port/tmf-api/partyManagement/v4/individual/1a0b-961f'
              id: 1a0b-961f
              name: Gustave Flaubert
              '@referredType': Individual
        status: validated
        validFor:
          startDateTime: '2022-06-24T00:00:00.000Z'
          endDateTime: '2024-06-24T00:00:00.000Z'
      description: Response message
    PartyRole_partialupdate_example_application_json_patch_query_json_request:
      value:
        - op: replace
          path: /contactMedium?id=1
          value:
            '@type': PhoneContactMedium
            phoneNumber: '+3312345678'
      description: >-
        Here's an example of a request for updating a PartyRole resource - change phone number. This
        example illustrates patch using application/json-patch-query+json.
    PartyRole_partialupdate_example_application_json_patch_query_json_response:
      value:
        '@type': PartyRole
        href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRole/7321-7c0d'
        id: 7321-7c0d
        name: Mobile catalog administrator
        role: CatalogAdmin
        engagedParty:
          '@type': PartyRef
          href: 'https:/host:port/tmf-api/partyManagement/v2/individual/3b1c-74f1'
          id: 3b1c-74f1
          name: Jean Pontus
          '@referredType': Individual
        partyRoleSpecification:
          '@type': PartyRoleSpecificationRef
          href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
          id: '5713'
          name: Catalog administrator
        characteristic:
          - '@type': StringCharacteristic
            name: CatalogDomain
            valueType: string
            value: mobile catalog
        contactMedium:
          - '@type': PhoneContactMedium
            id: '1'
            phoneNumber: '+3312345678'
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: manager
            partyOrPartyRole:
              '@type': PartyRef
              href: 'https:/host:port/tmf-api/partyManagement/v4/individual/1a0b-961f'
              id: 1a0b-961f
              name: Gustave Flaubert
              '@referredType': Individual
        status: validationInProgress
        validFor:
          startDateTime: '2022-06-24T00:00:00.000Z'
          endDateTime: '2024-06-24T00:00:00.000Z'
      description: Response message
    PartyRoleSpecification_partialupdate_example_application_json_request:
      value:
        '@type': PartyRoleSpecification
        lifecycleStatus: validated
      description: >-
        Here's an example of a request for updating a PartyRoleSpecification resource - set
        lifecycleStatus to validated. This example illustrates patch using application/json.
    PartyRoleSpecification_partialupdate_example_application_json_response:
      value:
        '@type': PartyRoleSpecification
        href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
        id: '5713'
        name: Catalog administration
        specCharacteristic:
          - '@type': CharacteristicSpecification
            name: CatalogDomain
            valueType: string
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                value: mobile catalog
                valueType: string
              - '@type': StringCharacteristicValueSpecification
                value: internet/TV catalog
                valueType: string
              - '@type': StringCharacteristicValueSpecification
                value: B2B catalog
                valueType: string
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: Rights&access manager
            partyOrPartyRole:
              '@type': PartyRef
              href: 'https:/host:port/tmf-api/partyManagement/v4/individual/62ac-01fb'
              id: 62ac-01fb
              name: John Doe
              '@referredType': Individual
        permissionSpecificationSet:
          - '@type': PermissionSpecificationSetRef
            href: >-
              https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/2473-dc10
            id: 2473-dc10
          - '@type': PermissionSpecificationSetRef
            href: >-
              https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/920e-01df
            id: 920e-01df
        lifecycleStatus: validated
        validFor:
          startDateTime: '2022-06-01T00:00:00.000Z'
      description: Response message
    PartyRoleSpecification_partialupdate_example_application_merge_patch_json_request:
      value:
        '@type': PartyRoleSpecification
        lifecycleStatus: validated
      description: >-
        Here's an example of a request for updating a PartyRoleSpecification resource - set
        lifecycleStatus to validated. This example illustrates patch using
        application/merge-patch+json.
    PartyRoleSpecification_partialupdate_example_application_merge_patch_json_response:
      value:
        '@type': PartyRoleSpecification
        href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
        id: '5713'
        name: Catalog administration
        specCharacteristic:
          - '@type': CharacteristicSpecification
            name: CatalogDomain
            valueType: string
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                value: mobile catalog
                valueType: string
              - '@type': StringCharacteristicValueSpecification
                value: internet/TV catalog
                valueType: string
              - '@type': StringCharacteristicValueSpecification
                value: B2B catalog
                valueType: string
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: Rights&access manager
            partyOrPartyRole:
              '@type': PartyRef
              href: 'https:/host:port/tmf-api/partyManagement/v4/individual/62ac-01fb'
              id: 62ac-01fb
              name: John Doe
              '@referredType': Individual
        permissionSpecificationSet:
          - '@type': PermissionSpecificationSetRef
            href: >-
              https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/2473-dc10
            id: 2473-dc10
          - '@type': PermissionSpecificationSetRef
            href: >-
              https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/920e-01df
            id: 920e-01df
        lifecycleStatus: validated
        validFor:
          startDateTime: '2022-06-01T00:00:00.000Z'
      description: Response message
    PartyRoleSpecification_partialupdate_example_application_json_patch_json_request:
      value:
        - op: replace
          path: /lifecycleStatus
          value: validated
      description: >-
        Here's an example of a request for updating a PartyRoleSpecification resource - set
        lifecycleStatus to validated. This example illustrates patch using
        application/json-patch+json.
    PartyRoleSpecification_partialupdate_example_application_json_patch_json_response:
      value:
        '@type': PartyRoleSpecification
        href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
        id: '5713'
        name: Catalog administration
        specCharacteristic:
          - '@type': CharacteristicSpecification
            name: CatalogDomain
            valueType: string
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                value: mobile catalog
                valueType: string
              - '@type': StringCharacteristicValueSpecification
                value: internet/TV catalog
                valueType: string
              - '@type': StringCharacteristicValueSpecification
                value: B2B catalog
                valueType: string
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: Rights&access manager
            partyOrPartyRole:
              '@type': PartyRef
              href: 'https:/host:port/tmf-api/partyManagement/v4/individual/62ac-01fb'
              id: 62ac-01fb
              name: John Doe
              '@referredType': Individual
        permissionSpecificationSet:
          - '@type': PermissionSpecificationSetRef
            href: >-
              https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/2473-dc10
            id: 2473-dc10
          - '@type': PermissionSpecificationSetRef
            href: >-
              https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/920e-01df
            id: 920e-01df
        lifecycleStatus: validated
        validFor:
          startDateTime: '2022-06-01T00:00:00.000Z'
      description: Response message
    PartyRoleSpecification_partialupdate_example_application_json_patch_query_json_request:
      value:
        - op: replace
          path: /specCharacteristic?id=1
          value:
            '@type': CharacteristicSpecification
            id: '1'
            name: CatalogDomain
            valueType: string
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                value: mobile catalog
                valueType: string
      description: >-
        Here's an example of a request for updating a PartyRoleSpecification resource - remove some
        characteristics. This example illustrates patch using application/json-patch-query+json.
    PartyRoleSpecification_partialupdate_example_application_json_patch_query_json_response:
      value:
        '@type': PartyRoleSpecification
        href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
        id: '5713'
        name: Catalog administration
        specCharacteristic:
          - '@type': CharacteristicSpecification
            name: CatalogDomain
            valueType: string
            characteristicValueSpecification:
              - '@type': StringCharacteristicValueSpecification
                value: mobile catalog
                valueType: string
        relatedParty:
          - '@type': RelatedPartyOrPartyRole
            role: Rights&access manager
            partyOrPartyRole:
              '@type': PartyRef
              href: 'https:/host:port/tmf-api/partyManagement/v4/individual/62ac-01fb'
              id: 62ac-01fb
              name: John Doe
              '@referredType': Individual
        permissionSpecificationSet:
          - '@type': PermissionSpecificationSetRef
            href: >-
              https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/2473-dc10
            id: 2473-dc10
          - '@type': PermissionSpecificationSetRef
            href: >-
              https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/920e-01df
            id: 920e-01df
        lifecycleStatus: validationInProgress
        validFor:
          startDateTime: '2022-06-01T00:00:00.000Z'
      description: Response message
    PartyRoleCreateEvent_request:
      value:
        '@type': PartyRoleCreateEvent
        '@baseType': Event
        correlationId: 1ccd2737-dde9
        domain: Commercial
        title: PartyRoleCreateEvent
        description: PartyRoleCreateEvent illustration
        priority: '2'
        timeOccurred: '2022-11-24T15:02:24.942Z'
        source:
          '@type': ReportingResource
          id: '21'
          name: APP-422
          '@referredType': LogicalResource
        reportingSystem:
          '@type': ReportingResource
          id: '999'
          name: APP-28
          '@referredType': LogicalResource
        eventId: 463a-a791-3572340b22c1
        eventTime: '2022-11-24T15:02:28.204Z'
        eventType: PartyRoleCreateEvent
        event:
          partyRole:
            '@type': PartyRole
            href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRole/7321-7c0d'
            id: 7321-7c0d
            name: Mobile catalog administrator
            role: CatalogAdmin
            engagedParty:
              '@type': PartyRef
              href: 'https:/host:port/tmf-api/partyManagement/v2/individual/3b1c-74f1'
              id: 3b1c-74f1
              name: Jean Pontus
              '@referredType': Individual
            partyRoleSpecification:
              '@type': PartyRoleSpecificationRef
              href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
              id: '5713'
              name: Catalog administrator
            characteristic:
              - '@type': StringCharacteristic
                name: CatalogDomain
                valueType: string
                value: mobile catalog
            contactMedium:
              - '@type': PhoneContactMedium
                id: '1'
                phoneNumber: '+3311223344'
            relatedParty:
              - '@type': RelatedPartyOrPartyRole
                role: manager
                partyOrPartyRole:
                  '@type': PartyRef
                  href: 'https:/host:port/tmf-api/partyManagement/v4/individual/1a0b-961f'
                  id: 1a0b-961f
                  name: Gustave Flaubert
                  '@referredType': Individual
            status: validationInProgress
            validFor:
              startDateTime: '2022-06-24T00:00:00.000Z'
              endDateTime: '2024-06-24T00:00:00.000Z'
      description: Message example for PartyRoleCreateEvent event
    PartyRoleAttributeValueChangeEvent_request:
      value:
        '@type': PartyRoleAttributeValueChangeEvent
        '@baseType': Event
        correlationId: 5e106a05-25e4
        domain: Commercial
        title: PartyRoleAttributeValueChangeEvent
        description: PartyRoleAttributeValueChangeEvent illustration
        priority: '3'
        timeOccurred: '2022-11-24T15:02:22.124Z'
        source:
          '@type': ReportingResource
          id: '21'
          name: APP-422
          '@referredType': LogicalResource
        reportingSystem:
          '@type': ReportingResource
          id: '999'
          name: APP-28
          '@referredType': LogicalResource
        eventId: 4c52-bf1d-ea5ac506c5b3
        eventTime: '2022-11-24T15:02:28.219Z'
        eventType: PartyRoleAttributeValueChangeEvent
        event:
          partyRole:
            '@type': PartyRole
            href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRole/7321-7c0d'
            id: 7321-7c0d
            name: Mobile catalog main administrator
      description: Message example for PartyRoleAttributeValueChangeEvent event
    PartyRoleStateChangeEvent_request:
      value:
        '@type': PartyRoleStateChangeEvent
        '@baseType': Event
        correlationId: 01424706-45de
        domain: Commercial
        title: PartyRoleStateChangeEvent
        description: PartyRoleStateChangeEvent illustration
        priority: '5'
        timeOccurred: '2022-11-24T15:02:27.428Z'
        source:
          '@type': ReportingResource
          id: '21'
          name: APP-422
          '@referredType': LogicalResource
        reportingSystem:
          '@type': ReportingResource
          id: '999'
          name: APP-28
          '@referredType': LogicalResource
        eventId: 4191-a495-7e5694322a53
        eventTime: '2022-11-24T15:02:28.232Z'
        eventType: PartyRoleStateChangeEvent
        event:
          partyRole:
            '@type': PartyRole
            href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRole/7321-7c0d'
            id: 7321-7c0d
            name: Mobile catalog administrator
            role: CatalogAdmin
            engagedParty:
              '@type': PartyRef
              href: 'https:/host:port/tmf-api/partyManagement/v2/individual/3b1c-74f1'
              id: 3b1c-74f1
              name: Jean Pontus
              '@referredType': Individual
            partyRoleSpecification:
              '@type': PartyRoleSpecificationRef
              href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
              id: '5713'
              name: Catalog administrator
            characteristic:
              - '@type': StringCharacteristic
                name: CatalogDomain
                valueType: string
                value: mobile catalog
            contactMedium:
              - '@type': PhoneContactMedium
                id: '1'
                phoneNumber: '+3311223344'
            relatedParty:
              - '@type': RelatedPartyOrPartyRole
                role: manager
                partyOrPartyRole:
                  '@type': PartyRef
                  href: 'https:/host:port/tmf-api/partyManagement/v4/individual/1a0b-961f'
                  id: 1a0b-961f
                  name: Gustave Flaubert
                  '@referredType': Individual
            status: validated
            validFor:
              startDateTime: '2022-06-24T00:00:00.000Z'
              endDateTime: '2024-06-24T00:00:00.000Z'
      description: Message example for PartyRoleStateChangeEvent event
    PartyRoleDeleteEvent_request:
      value:
        '@type': PartyRoleDeleteEvent
        '@baseType': Event
        correlationId: bce0fdb2-384d
        domain: Commercial
        title: PartyRoleDeleteEvent
        description: PartyRoleDeleteEvent illustration
        priority: '1'
        timeOccurred: '2022-11-24T15:02:22.999Z'
        source:
          '@type': ReportingResource
          id: '21'
          name: APP-422
          '@referredType': LogicalResource
        reportingSystem:
          '@type': ReportingResource
          id: '999'
          name: APP-28
          '@referredType': LogicalResource
        eventId: 42b6-85c2-a778ed319692
        eventTime: '2022-11-24T15:02:28.244Z'
        eventType: PartyRoleDeleteEvent
        event:
          partyRole:
            '@type': PartyRole
            id: 7321-7c0d
      description: Message example for PartyRoleDeleteEvent event
    PartyRoleSpecificationCreateEvent_request:
      value:
        '@type': PartyRoleSpecificationCreateEvent
        '@baseType': Event
        correlationId: 1ccd2737-msk9
        domain: Commercial
        title: PartyRoleSpecificationCreateEvent
        description: PartyRoleSpecificationCreateEvent illustration
        priority: '2'
        timeOccurred: '2022-11-24T15:02:24.942Z'
        source:
          '@type': ReportingResource
          id: '21'
          name: APP-422
          '@referredType': LogicalResource
        reportingSystem:
          '@type': ReportingResource
          id: '999'
          name: APP-28
          '@referredType': LogicalResource
        eventId: 463a-a791-3572340bjcu8
        eventTime: '2022-11-24T15:02:28.204Z'
        eventType: PartyRoleSpecificationCreateEvent
        event:
          partyRoleSpecification:
            '@type': PartyRoleSpecification
            href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
            id: '5713'
            name: Catalog administration
            partyRoleSpecificationCharacteristic:
              - '@type': CharacteristicSpecification
                id: '1'
                name: CatalogDomain
                valueType: string
                characteristicValueSpecification:
                  - '@type': StringCharacteristicValueSpecification
                    value: mobile catalog
                    valueType: string
                  - '@type': StringCharacteristicValueSpecification
                    value: internet/TV catalog
                    valueType: string
                  - '@type': StringCharacteristicValueSpecification
                    value: B2B catalog
                    valueType: string
            relatedParty:
              - '@type': RelatedPartyOrPartyRole
                role: Rights&access manager
                partyOrPartyRole:
                  '@type': PartyRef
                  href: 'https:/host:port/tmf-api/partyManagement/v4/individual/62ac-01fb'
                  id: 62ac-01fb
                  name: John Doe
                  '@referredType': Individual
            permissionSpecificationSet:
              - '@type': PermissionSpecificationSetRef
                href: >-
                  https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/2473-dc10
                id: 2473-dc10
              - '@type': PermissionSpecificationSetRef
                href: >-
                  https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/920e-01df
                id: 920e-01df
            lifecycleStatus: validationInProgress
            validFor:
              startDateTime: '2022-06-01T00:00:00.000Z'
      description: Message example for PartyRoleSpecificationCreateEvent event
    PartyRoleSpecificationAttributeValueChangeEvent_request:
      value:
        '@type': PartyRoleSpecificationAttributeValueChangeEvent
        '@baseType': Event
        correlationId: 5e106a05-38fj
        domain: Commercial
        title: PartyRoleSpecificationAttributeValueChangeEvent
        description: PartyRoleSpecificationAttributeValueChangeEvent illustration
        priority: '3'
        timeOccurred: '2022-11-24T15:02:22.124Z'
        source:
          '@type': ReportingResource
          id: '21'
          name: APP-422
          '@referredType': LogicalResource
        reportingSystem:
          '@type': ReportingResource
          id: '999'
          name: APP-28
          '@referredType': LogicalResource
        eventId: 4c52-bf1d-ea5ac506dn78
        eventTime: '2022-11-24T15:02:28.219Z'
        eventType: PartyRoleSpecificationAttributeValueChangeEvent
        event:
          partyRoleSpecification:
            '@type': PartyRoleSpecification
            href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
            id: '5713'
            name: Main catalog administration
      description: Message example for PartyRoleSpecificationAttributeValueChangeEvent event
    PartyRoleSpecificationStateChangeEvent_request:
      value:
        '@type': PartyRoleSpecificationStateChangeEvent
        '@baseType': Event
        correlationId: 01424706-shcy
        domain: Commercial
        title: PartyRoleSpecificationStateChangeEvent
        description: PartyRoleSpecificationStateChangeEvent illustration
        priority: '5'
        timeOccurred: '2022-11-24T15:02:27.428Z'
        source:
          '@type': ReportingResource
          id: '21'
          name: APP-422
          '@referredType': LogicalResource
        reportingSystem:
          '@type': ReportingResource
          id: '999'
          name: APP-28
          '@referredType': LogicalResource
        eventId: 4191-a495-7e56943276452
        eventTime: '2022-11-24T15:02:28.232Z'
        eventType: PartyRoleSpecificationStateChangeEvent
        event:
          partyRoleSpecification:
            '@type': PartyRoleSpecification
            href: 'https:/host:port/tmf-api/partyRoleManagement/v4/partyRoleSpecification/5713'
            id: '5713'
            name: Catalog administration
            partyRoleSpecificationCharacteristic:
              - '@type': CharacteristicSpecification
                id: '1'
                name: CatalogDomain
                valueType: string
                characteristicValueSpecification:
                  - '@type': StringCharacteristicValueSpecification
                    value: mobile catalog
                    valueType: string
                  - '@type': StringCharacteristicValueSpecification
                    value: internet/TV catalog
                    valueType: string
                  - '@type': StringCharacteristicValueSpecification
                    value: B2B catalog
                    valueType: string
            relatedParty:
              - '@type': RelatedPartyOrPartyRole
                role: Rights&access manager
                partyOrPartyRole:
                  '@type': PartyRef
                  href: 'https:/host:port/tmf-api/partyManagement/v4/individual/62ac-01fb'
                  id: 62ac-01fb
                  name: John Doe
                  '@referredType': Individual
            permissionSpecificationSet:
              - '@type': PermissionSpecificationSetRef
                href: >-
                  https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/2473-dc10
                id: 2473-dc10
              - '@type': PermissionSpecificationSetRef
                href: >-
                  https:/host:port/tmf-api/userRolePermissionManagement/v4/permissionSpecificationSet/920e-01df
                id: 920e-01df
            lifecycleStatus: validated
            validFor:
              startDateTime: '2022-06-01T00:00:00.000Z'
      description: Message example for PartyRoleSpecificationStateChangeEvent event
    PartyRoleSpecificationDeleteEvent_request:
      value:
        '@type': PartyRoleSpecificationDeleteEvent
        '@baseType': Event
        correlationId: bce0fdb2-0964
        domain: Commercial
        title: PartyRoleSpecificationDeleteEvent
        description: PartyRoleSpecificationDeleteEvent illustration
        priority: '1'
        timeOccurred: '2022-11-24T15:02:22.999Z'
        source:
          '@type': ReportingResource
          id: '21'
          name: APP-422
          '@referredType': LogicalResource
        reportingSystem:
          '@type': ReportingResource
          id: '999'
          name: APP-28
          '@referredType': LogicalResource
        eventId: 42b6-85c2-a778ed31nfiue
        eventTime: '2022-11-24T15:02:28.244Z'
        eventType: PartyRoleSpecificationDeleteEvent
        event:
          partyRoleSpecification:
            '@type': PartyRoleSpecification
            id: '5713'
      description: Message example for PartyRoleSpecificationDeleteEvent event
